{"version":3,"sources":["components/TimeUnit/TimerColon/TimerColon.module.scss","img/svg/dot.svg","components/PomodoroButtons/ToggleTimeUnit.module.scss","components/QuickStartPanel/QuickStartPanel.module.scss","views/RootView/App.module.scss","components/HistoryPanel/HistoryItem/HistoryItem.js","components/HistoryPanel/HistoryPanel.js","components/TimeUnit/TimerDisplay/TimerDisplay.js","components/TimeUnit/TimerColon/TimerColon.js","components/TimeUnit/TimerSetButtons/TimerSetButtons.js","components/TimeUnit/TimeUnit.js","components/PomodoroButtons/StartStopButton.js","components/PomodoroButtons/CancelButton.js","components/PomodoroButtons/ToggleTimeUnit.js","components/QuickStartPanel/QuickStartPanel.js","components/ErrorBoundry/ErrorBoundry.js","views/RootView/App.js","serviceWorker.js","index.js"],"names":["module","exports","HistoryItem","title","date","workTime","restTime","pausesCount","sessions","handleClose","className","Toast","onClose","Header","closeLabel","toLocaleDateString","toLocaleTimeString","Body","style","color","HistoryPanel","props","sortByDate","setState","prevState","historyItemsFromStorage","sort","itemOne","ItemTwo","dateOne","Date","dateTwo","parseInt","getTime","deleteItem","itemToRemove","localStorage","removeItem","filter","item","id","moveDataFromStorageToState","localStoragePomodoros","Object","entries","map","includes","prepareDataForHistoryItem","preparedItem","JSON","parse","dateToParse","state","itemArrived","storageID","prevProps","this","extensiblePropObj","setItem","uuidv4","stringify","console","count","ItemsToDisplay","Row","TransitionGroup","length","historyItem","CSSTransition","key","timeout","enter","exit","classNames","Component","TimeDisplay","time","fontSize","Col","TimerColon","Container","Image","styles","timerColonStyles","src","dot","roundedCircle","TimerSetButtons","setTime","ButtonGroup","Button","variant","data-toggle","data-placement","onClick","TimeUnit","children","timeLeftInSeconds","minutesSet","elapsedTimeInSeconds","minutesLeft","Math","floor","secondsLeft","Card","TimerDisplay","StartStopButton","disabled","handleStartStop","Badge","CancelButton","onCancel","ToggleUnit","checkFn","checked","label","type","onChange","checkboxDiv","QuickStartPanel","resetInterval","window","clearInterval","customTimerID","toggleTimeUnitDisplay","userSetsRestTime","handleCancelTimer","workMinutes","restMinutes","fetchFn","isAppReady","isTimeRunning","isItWorkTime","isItRestTime","elapsedWorkTimeInSeconds","elapsedRestTimeInSeconds","handlePauseTimer","handleStartTimer","setInterval","setWorkTime","target","setRestTime","workMinutesInSeconds","restMinutesInSeconds","timesAreSetAndAppIsReadyToLaunch","workTImeHasFinishedNowRestTimeBegins","restTimeHasFinishedAndSessionIsOver","itIsWorkTimeAndWorkTimeIsOnDisplay","itIsRestTimeAndRestTimeIsOnDisplay","screenIsWideEnough","matchMedia","matches","userWantsToDisplayWorkTime","shouldDisplayWorkTimeUnit","shouldDisplayRestTimeUnit","cardGeneralStyles","ToggleTimeUnit","ErrorBoundry","hasError","error","errorInfo","log","message","React","App","fetchSessionData","StrictMode","fluid","bgColor","sm","md","order","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.53074a95.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"timerColonStyles\":\"TimerColon_timerColonStyles__141oB\",\"blink\":\"TimerColon_blink__WJKDJ\"};","module.exports = __webpack_public_path__ + \"static/media/dot.dd0f186c.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"ToggleTimeUnit_label__3TOHs\",\"checkboxDiv\":\"ToggleTimeUnit_checkboxDiv__1yUdo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cardGeneralStyles\":\"QuickStartPanel_cardGeneralStyles__ODsuY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bgColor\":\"App_bgColor__h_vzy\"};","import React from 'react';\r\nimport { Toast } from 'react-bootstrap';\r\n\r\nconst HistoryItem = ({\r\n  title,\r\n  date,\r\n  workTime,\r\n  restTime,\r\n  sessions,\r\n  pausesCount,\r\n  handleClose,\r\n}) => {\r\n  return (\r\n    <div className=\"my-3\">\r\n      <Toast onClose={handleClose}>\r\n        <Toast.Header closeLabel={'Close'}>\r\n          <strong className=\"mr-auto\">{title}</strong>\r\n          <strong>{date.toLocaleDateString()}</strong>\r\n          <small>{date.toLocaleTimeString()}</small>\r\n        </Toast.Header>\r\n        <Toast.Body className=\"text-center\">\r\n          Work Time: <strong>{workTime} min</strong> <br />\r\n          Rest Time: <strong>{restTime} min</strong> <br />\r\n          Total Pauses: <strong style={{ color: 'red' }}>{pausesCount}</strong>\r\n        </Toast.Body>\r\n      </Toast>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HistoryItem;\r\n","import React, { Component } from 'react';\r\nimport { Row, Button } from 'react-bootstrap';\r\nimport HistoryItem from './HistoryItem/HistoryItem';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport './HistoryPanel.css';\r\n\r\nexport class HistoryPanel extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      itemArrived: false,\r\n      storageID: 0,\r\n      historyItemsFromStorage: [],\r\n    };\r\n  }\r\n\r\n  sortByDate = () => {\r\n    this.setState((prevState) => {\r\n      const historyItemsFromStorage = prevState.historyItemsFromStorage.sort(\r\n        (itemOne, ItemTwo) => {\r\n          const dateOne = new Date(itemOne.date);\r\n          const dateTwo = new Date(ItemTwo.date);\r\n          return parseInt(dateTwo.getTime()) - parseInt(dateOne.getTime());\r\n        }\r\n      );\r\n      return { historyItemsFromStorage };\r\n    });\r\n  };\r\n\r\n  deleteItem = (itemToRemove) => {\r\n    localStorage.removeItem(itemToRemove);\r\n    this.setState((prevState) => {\r\n      const historyItemsFromStorage = prevState.historyItemsFromStorage.filter(\r\n        (item) => item.id !== itemToRemove\r\n      );\r\n      return { historyItemsFromStorage };\r\n    });\r\n  };\r\n\r\n  moveDataFromStorageToState = () => {\r\n    const localStoragePomodoros = Object.entries(localStorage)\r\n      .map((item) => {\r\n        return item[0].includes('Pomodoro') ? item : null;\r\n      })\r\n      .filter((item) => item);\r\n    this.setState({ historyItemsFromStorage: localStoragePomodoros });\r\n  };\r\n\r\n  prepareDataForHistoryItem = () => {\r\n    this.setState((prevState) => {\r\n      const historyItemsFromStorage = prevState.historyItemsFromStorage.map(\r\n        (item) => {\r\n          const preparedItem = JSON.parse(item[1]);\r\n          let dateToParse = preparedItem.date;\r\n          dateToParse = new Date(dateToParse);\r\n          delete preparedItem.date;\r\n          preparedItem.date = dateToParse;\r\n          preparedItem.id = item[0];\r\n          return preparedItem;\r\n        }\r\n      );\r\n      return { historyItemsFromStorage };\r\n    });\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    const propsHasChanged = prevProps !== this.props;\r\n    if (propsHasChanged) {\r\n      const extensiblePropObj = { ...this.props };\r\n      extensiblePropObj.date = new Date();\r\n\r\n      localStorage.setItem(\r\n        `Pomodoro-Deluxe-${uuidv4()}`,\r\n        JSON.stringify(extensiblePropObj)\r\n      );\r\n      this.setState({ itemArrived: false });\r\n      this.moveDataFromStorageToState();\r\n      this.prepareDataForHistoryItem();\r\n      this.sortByDate();\r\n    }\r\n    console.count('HistoryPanel update');\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.moveDataFromStorageToState();\r\n    this.prepareDataForHistoryItem();\r\n    this.sortByDate();\r\n    console.count('HistoryPanel mount');\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    console.count('HistoryPanel unmount');\r\n  }\r\n  render() {\r\n    const ItemsToDisplay = this.state.historyItemsFromStorage;\r\n    return (\r\n      <>\r\n        <Row>\r\n          <div className={`mx-auto`}>\r\n            <TransitionGroup>\r\n              {ItemsToDisplay.length\r\n                ? ItemsToDisplay.map((historyItem) => {\r\n                    return (\r\n                      <CSSTransition\r\n                        key={historyItem.id}\r\n                        timeout={{ enter: 800, exit: 500 }}\r\n                        classNames={'historyItem'}\r\n                      >\r\n                        <HistoryItem\r\n                          handleClose={() => {\r\n                            this.deleteItem(historyItem.id);\r\n                          }}\r\n                          key={historyItem.id}\r\n                          {...historyItem}\r\n                        />\r\n                      </CSSTransition>\r\n                    );\r\n                  })\r\n                : null}\r\n            </TransitionGroup>\r\n          </div>\r\n        </Row>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HistoryPanel;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Row, Col } from 'react-bootstrap';\r\n\r\nconst TimeDisplay = ({ time }) => (\r\n  <Row style={{ fontSize: '30px' }}>\r\n    <Col className=\"d-flex align-items-sm-center justify-content-sm-center text-warning\">\r\n      {time < 10 ? `0${time}` : time}\r\n    </Col>\r\n  </Row>\r\n);\r\n\r\nTimeDisplay.propTypes = {\r\n  time: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default TimeDisplay;\r\n","import React from 'react';\r\nimport styles from './TimerColon.module.scss';\r\nimport { Image, Container } from 'react-bootstrap';\r\nimport dot from '../../../img/svg/dot.svg';\r\n\r\nconst TimerColon = () => (\r\n  <Container className=\"d-flex flex-column align-items-center\">\r\n    <Image className={styles.timerColonStyles} src={dot} roundedCircle />\r\n    <Image className={styles.timerColonStyles} src={dot} roundedCircle />\r\n  </Container>\r\n);\r\n\r\nexport default TimerColon;\r\n","import React from 'react';\r\nimport { ButtonGroup, Button } from 'react-bootstrap';\r\nimport PropTypes from 'prop-types';\r\n//import styles from './TimerSetButtons.module.scss';\r\n\r\nconst TimerSetButtons = ({ setTime }) => {\r\n  return (\r\n    <ButtonGroup className=\"btn-sm w-50 mx-auto\">\r\n      <Button\r\n        variant=\"danger\"\r\n        data-toggle=\"tooltip\"\r\n        data-placement=\"bottom\"\r\n        title=\"+\"\r\n        className=\"shadow\"\r\n        onClick={setTime}\r\n      >\r\n        +\r\n      </Button>\r\n      <Button\r\n        variant=\"outline-danger\"\r\n        data-toggle=\"tooltip\"\r\n        data-placement=\"bottom\"\r\n        title=\"-\"\r\n        className=\"shadow\"\r\n        onClick={setTime}\r\n      >\r\n        -\r\n      </Button>\r\n    </ButtonGroup>\r\n  );\r\n};\r\n\r\nTimerSetButtons.propTypes = {\r\n  setTime: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default TimerSetButtons;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Card, Col, Row } from 'react-bootstrap';\r\nimport TimerDisplay from './TimerDisplay/TimerDisplay';\r\nimport TimerColon from './TimerColon/TimerColon';\r\nimport TimerSetButtons from './TimerSetButtons/TimerSetButtons';\r\n\r\nconst TimeUnit = ({ children, setTime, minutesSet, elapsedTimeInSeconds }) => {\r\n  const timeInSeconds = minutesSet * 60;\r\n  const timeLeftInSeconds = timeInSeconds - elapsedTimeInSeconds;\r\n  const minutesLeft = Math.floor(timeLeftInSeconds / 60);\r\n  const secondsLeft = Math.floor(timeLeftInSeconds % 60);\r\n\r\n  return (\r\n    <>\r\n      <Card className=\"p-3 mx-auto my-auto bg-light shadow-lg border border-warning rounded-pill\">\r\n        <Row className=\"mx-auto text-uppercase text-warning\">{children}</Row>\r\n        <Row className=\"mx-auto\">\r\n          <Col>\r\n            <TimerDisplay time={minutesLeft > 0 ? minutesLeft : 0} />\r\n          </Col>\r\n          <Col className=\"w-25\">\r\n            <TimerColon />\r\n          </Col>\r\n          <Col>\r\n            <TimerDisplay time={secondsLeft > 0 ? secondsLeft : 0} />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <TimerSetButtons setTime={setTime} />\r\n        </Row>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nTimeUnit.propTypes = {\r\n  children: PropTypes.string.isRequired,\r\n  setTime: PropTypes.func.isRequired,\r\n  minutesSet: PropTypes.number.isRequired,\r\n  elapsedTimeInSeconds: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default TimeUnit;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Button, Badge } from 'react-bootstrap';\r\n\r\nconst StartStopButton = ({\r\n  children,\r\n  disabled,\r\n  handleStartStop,\r\n  pausesCount,\r\n}) => {\r\n  return (\r\n    <p>\r\n      <Button\r\n        className={`mt-5 mx-3 ${disabled ? 'disabled' : null}`}\r\n        variant=\"warning\"\r\n        data-toggle=\"tooltip\"\r\n        data-placement=\"top\"\r\n        title=\"Start pomodoro\"\r\n        onClick={handleStartStop}\r\n      >\r\n        {children}\r\n        <Badge className=\"ml-2\" variant=\"light\">\r\n          {pausesCount}\r\n        </Badge>\r\n      </Button>\r\n    </p>\r\n  );\r\n};\r\n\r\nStartStopButton.propTypes = {\r\n  children: PropTypes.string.isRequired,\r\n  disabled: PropTypes.bool.isRequired,\r\n  onStart: PropTypes.func,\r\n  onPause: PropTypes.func,\r\n  isTimeRunning: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default StartStopButton;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Button } from 'react-bootstrap';\r\n\r\nconst CancelButton = ({ children, disabled, onCancel }) => {\r\n  return (\r\n    <p>\r\n      <Button\r\n        className={`mt-5 mx-3 ${disabled ? 'disabled' : null}`}\r\n        variant=\"danger\"\r\n        data-toggle=\"tooltip\"\r\n        data-placement=\"top\"\r\n        title=\"Cancel session\"\r\n        onClick={onCancel}\r\n      >\r\n        {children}\r\n      </Button>\r\n    </p>\r\n  );\r\n};\r\n\r\nCancelButton.propTypes = {\r\n  children: PropTypes.string.isRequired,\r\n  disabled: PropTypes.bool.isRequired,\r\n  onCancel: PropTypes.func,\r\n};\r\n\r\nexport default CancelButton;\r\n","import React from 'react';\r\nimport styles from './ToggleTimeUnit.module.scss';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ToggleUnit = ({ checkFn, children, checked }) => (\r\n  <label className={styles.label}>\r\n    <input type=\"checkbox\" checked={checked} onChange={checkFn} />\r\n    <div className={styles.checkboxDiv} />\r\n    {children}\r\n  </label>\r\n);\r\n\r\nToggleUnit.propTypes = {\r\n  checkFn: PropTypes.func.isRequired,\r\n  children: PropTypes.string.isRequired,\r\n  checked: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default ToggleUnit;\r\n","import React, { Component } from 'react';\r\nimport { Row, Col, Container } from 'react-bootstrap';\r\nimport TimeUnit from '../TimeUnit/TimeUnit';\r\nimport StartStopButton from '../PomodoroButtons/StartStopButton';\r\nimport CancelButton from '../PomodoroButtons/CancelButton';\r\nimport ToggleTimeUnit from '../PomodoroButtons/ToggleTimeUnit';\r\nimport styles from './QuickStartPanel.module.scss';\r\n\r\nexport class QuickStartPanel extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isAppReady: false,\r\n      isTimeRunning: false,\r\n      isItWorkTime: false,\r\n      isItRestTime: false,\r\n      workMinutes: 0,\r\n      restMinutes: 0,\r\n      pausesCount: 0,\r\n      elapsedWorkTimeInSeconds: 0,\r\n      elapsedRestTimeInSeconds: 0,\r\n      userSetsRestTime: false,\r\n    };\r\n    this.customTimerID = null;\r\n  }\r\n\r\n  resetInterval = () => {\r\n    window.clearInterval(this.customTimerID);\r\n    this.customTimerID = null;\r\n  };\r\n\r\n  toggleTimeUnitDisplay = () => {\r\n    this.setState((prevState) => ({\r\n      userSetsRestTime: !prevState.userSetsRestTime,\r\n    }));\r\n  };\r\n\r\n  handleCancelTimer = () => {\r\n    const { workMinutes, restMinutes, pausesCount } = this.state;\r\n    this.props.fetchFn(workMinutes, restMinutes, pausesCount);\r\n\r\n    this.setState({\r\n      isAppReady: false,\r\n      isTimeRunning: false,\r\n      isItWorkTime: false,\r\n      isItRestTime: false,\r\n      workMinutes: 0,\r\n      restMinutes: 0,\r\n      pausesCount: 0,\r\n      elapsedWorkTimeInSeconds: 0,\r\n      elapsedRestTimeInSeconds: 0,\r\n    });\r\n    this.resetInterval();\r\n  };\r\n\r\n  handlePauseTimer = () => {\r\n    this.setState((prevState) => ({\r\n      isTimeRunning: false,\r\n      pausesCount: prevState.pausesCount++,\r\n    }));\r\n    this.resetInterval();\r\n  };\r\n\r\n  handleStartTimer = () => {\r\n    if (this.customTimerID === null) {\r\n      this.setState({ isTimeRunning: true, isItWorkTime: true });\r\n      this.customTimerID = window.setInterval(() => {\r\n        if (this.state.isItWorkTime) {\r\n          this.setState((prevState) => ({\r\n            elapsedWorkTimeInSeconds: prevState.elapsedWorkTimeInSeconds + 1,\r\n          }));\r\n        }\r\n        if (this.state.isItRestTime && this.state.restMinutes > 0) {\r\n          this.setState((prevState) => ({\r\n            elapsedRestTimeInSeconds: prevState.elapsedRestTimeInSeconds + 1,\r\n          }));\r\n        }\r\n      }, 1000);\r\n    }\r\n  };\r\n\r\n  setWorkTime = ({ target }) => {\r\n    target.title === '+'\r\n      ? this.setState({ workMinutes: this.state.workMinutes + 0.5 })\r\n      : this.state.workMinutes > 0\r\n      ? this.setState({ workMinutes: this.state.workMinutes - 0.5 })\r\n      : this.setState({ workMinutes: 0 });\r\n  };\r\n\r\n  setRestTime = ({ target }) => {\r\n    target.title === '+'\r\n      ? this.setState({ restMinutes: this.state.restMinutes + 0.5 })\r\n      : this.state.restMinutes > 0\r\n      ? this.setState({ restMinutes: this.state.restMinutes - 0.5 })\r\n      : this.setState({ restMinutes: 0 });\r\n  };\r\n\r\n  componentDidUpdate() {\r\n    const workMinutesInSeconds = this.state.workMinutes * 60;\r\n    const restMinutesInSeconds = this.state.restMinutes * 60;\r\n    const timesAreSetAndAppIsReadyToLaunch =\r\n      this.state.workMinutes > 0 &&\r\n      this.state.restMinutes > 0 &&\r\n      this.state.isAppReady === false;\r\n    const workTImeHasFinishedNowRestTimeBegins =\r\n      workMinutesInSeconds === this.state.elapsedWorkTimeInSeconds &&\r\n      this.state.isItWorkTime &&\r\n      this.state.restMinutes > 0;\r\n    const restTimeHasFinishedAndSessionIsOver =\r\n      !this.state.isItWorkTime &&\r\n      this.state.isItRestTime &&\r\n      restMinutesInSeconds === this.state.elapsedRestTimeInSeconds;\r\n    const itIsWorkTimeAndWorkTimeIsOnDisplay =\r\n      this.state.isItWorkTime && this.state.userSetsRestTime;\r\n    const itIsRestTimeAndRestTimeIsOnDisplay =\r\n      this.state.isItRestTime && !this.state.userSetsRestTime;\r\n\r\n    if (timesAreSetAndAppIsReadyToLaunch) {\r\n      this.setState({ isAppReady: true });\r\n    }\r\n\r\n    if (workTImeHasFinishedNowRestTimeBegins) {\r\n      this.setState({ isItWorkTime: false, isItRestTime: true });\r\n    }\r\n    if (restTimeHasFinishedAndSessionIsOver) {\r\n      this.setState({\r\n        isAppReady: false,\r\n        isTimeRunning: false,\r\n        isItWorkTime: false,\r\n        isItRestTime: false,\r\n        workMinutes: 0,\r\n        restMinutes: 0,\r\n        pausesCount: 0,\r\n        elapsedWorkTimeInSeconds: 0,\r\n        elapsedRestTimeInSeconds: 0,\r\n      });\r\n      this.resetInterval();\r\n    }\r\n\r\n    if (itIsWorkTimeAndWorkTimeIsOnDisplay) {\r\n      this.setState({ userSetsRestTime: false });\r\n    }\r\n    if (itIsRestTimeAndRestTimeIsOnDisplay) {\r\n      this.setState({ userSetsRestTime: true });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      isAppReady,\r\n      isTimeRunning,\r\n      workMinutes,\r\n      restMinutes,\r\n      elapsedWorkTimeInSeconds,\r\n      elapsedRestTimeInSeconds,\r\n      userSetsRestTime,\r\n      pausesCount,\r\n    } = this.state;\r\n    const mediaQueryList = window.matchMedia('(max-width: 992px)');\r\n    const screenIsWideEnough = !mediaQueryList.matches;\r\n    const userWantsToDisplayWorkTime = !userSetsRestTime;\r\n\r\n    const shouldDisplayWorkTimeUnit =\r\n      screenIsWideEnough || userWantsToDisplayWorkTime;\r\n    const shouldDisplayRestTimeUnit =\r\n      screenIsWideEnough || !userWantsToDisplayWorkTime;\r\n\r\n    return (\r\n      <Container className={`p-3 ${styles.cardGeneralStyles}`}>\r\n        <h2 className=\"text-warning text-center my-3\">Quick Pomodoro</h2>\r\n        <Row>\r\n          <Col className=\"d-flex\">\r\n            {\r\n              <>\r\n                {shouldDisplayWorkTimeUnit && (\r\n                  <TimeUnit\r\n                    minutesSet={workMinutes}\r\n                    elapsedTimeInSeconds={elapsedWorkTimeInSeconds}\r\n                    setTime={this.setWorkTime}\r\n                  >\r\n                    WORK\r\n                  </TimeUnit>\r\n                )}\r\n                {shouldDisplayRestTimeUnit && (\r\n                  <TimeUnit\r\n                    minutesSet={restMinutes}\r\n                    elapsedTimeInSeconds={elapsedRestTimeInSeconds}\r\n                    setTime={this.setRestTime}\r\n                  >\r\n                    BREAK\r\n                  </TimeUnit>\r\n                )}\r\n              </>\r\n            }\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <StartStopButton\r\n            handleStartStop={\r\n              isAppReady && !isTimeRunning\r\n                ? this.handleStartTimer\r\n                : this.handlePauseTimer\r\n            }\r\n            pausesCount={pausesCount}\r\n            isTimeRunning={isTimeRunning}\r\n            disabled={workMinutes === 0 || restMinutes === 0}\r\n          >\r\n            {this.state.isTimeRunning ? 'Stop Pomodoro' : 'Start Pomodoro'}\r\n          </StartStopButton>\r\n          <CancelButton\r\n            disabled={!isAppReady}\r\n            onCancel={isAppReady ? this.handleCancelTimer : null}\r\n          >\r\n            Cancel\r\n          </CancelButton>\r\n\r\n          {!screenIsWideEnough && (\r\n            <ToggleTimeUnit\r\n              checked={userSetsRestTime}\r\n              checkFn={this.toggleTimeUnitDisplay}\r\n            >\r\n              Set Break\r\n            </ToggleTimeUnit>\r\n          )}\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default QuickStartPanel;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass ErrorBoundry extends React.Component {\r\n  state = {\r\n    hasError: false,\r\n  };\r\n  static getDerivedStateFromError(error) {\r\n    // Update state so the next render will show the fallback UI.\r\n    return { hasError: true };\r\n  }\r\n\r\n  componentDidCatch(error, errorInfo) {\r\n    // You can also log the error to an error reporting service\r\n    console.log('Wystąpił błąd ', error, errorInfo);\r\n  }\r\n  render() {\r\n    const { message, children } = this.props;\r\n    return this.state.hasError ? message : children;\r\n  }\r\n}\r\n\r\nErrorBoundry.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n  children: PropTypes.any.isRequired,\r\n};\r\n\r\nexport default ErrorBoundry;\r\n","import React from 'react';\r\nimport HistoryPanel from '../../components/HistoryPanel/HistoryPanel';\r\nimport QuickStartPanel from '../../components/QuickStartPanel/QuickStartPanel';\r\nimport ErrorBoundry from '../../components/ErrorBoundry/ErrorBoundry';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport styles from './App.module.scss';\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    title: 'Quick Pomodoro',\r\n    workTime: 0,\r\n    restTime: 0,\r\n    sessions: 1,\r\n    pausesCount: 0,\r\n  };\r\n\r\n  componentDidMount() {\r\n    console.count('App mount');\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    console.count('App update');\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    console.count('App mount');\r\n  }\r\n\r\n  fetchSessionData = (workTime, restTime, pausesCount) => {\r\n    this.setState({\r\n      workTime,\r\n      restTime,\r\n      pausesCount,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.StrictMode>\r\n        <Container fluid className={`App ${styles.bgColor} min-vh-100 p-5`}>\r\n          <Row>\r\n            <Col sm={12} md={{ order: 2 }} className=\"col-md-6 col-lg-9 shadow\">\r\n              <ErrorBoundry message=\"Błąd w QuickstartPanel\">\r\n                <QuickStartPanel fetchFn={this.fetchSessionData} />\r\n              </ErrorBoundry>\r\n            </Col>\r\n            <Col sm={12} className=\"col-md-6 col-lg-3 rounded shadow\">\r\n              <ErrorBoundry message=\"Błąd w HistoryPanel\">\r\n                <HistoryPanel {...this.state} />\r\n              </ErrorBoundry>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </React.StrictMode>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './views/RootView/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}
{"version":3,"sources":["components/TimeUnit/TimerColon/TimerColon.module.scss","img/svg/dot.svg","components/PomodoroButtons/ToggleTimeUnit.module.scss","components/QuickStartPanel/QuickStartPanel.module.scss","views/App/App.module.scss","components/TimeUnit/TimerDisplay/TimerDisplay.js","components/TimeUnit/TimerColon/TimerColon.js","components/TimeUnit/TimerSetButtons/TimerSetButtons.js","components/TimeUnit/TimeUnit.js","components/PomodoroButtons/StartStopButton.js","components/PomodoroButtons/CancelButton.js","components/PomodoroButtons/ToggleTimeUnit.js","components/QuickStartPanel/QuickStartPanel.js","views/MainView/MainView.js","views/HistoryView/HistoryView.js","views/App/App.js","serviceWorker.js","index.js"],"names":["module","exports","TimeDisplay","minutes","seconds","Row","style","fontSize","Col","className","TimerColon","Container","Image","styles","timerColonStyles","src","dot","roundedCircle","TimerSetButtons","setTime","ButtonGroup","Button","variant","data-toggle","data-placement","title","onClick","TimeUnit","children","setWorkTime","setRestTime","workMinutes","restMinutes","elapsedWorkTimeInSeconds","elapsedRestTimeInSeconds","restTimeInSeconds","workTimeLeftInSeconds","workMinutesLeft","Math","floor","workSecondsLeft","restTimeLeftInSeconds","restMinutesLeft","restSecondsLeft","Card","TimerDisplay","StartStopButton","disabled","onStart","onPause","isTimeRunning","CancelButton","onCancel","ToggleUnit","checkFn","checked","label","type","onChange","checkboxDiv","QuickStartPanel","props","toggleTimeUnitDisplay","setState","prevState","checkboxChecked","handleCancelTimer","isAppReady","isItWorkTime","isItRestTime","customTimer","handlePauseTimer","window","clearInterval","handleStartTimer","setInterval","state","target","workMinutesInSeconds","this","restMinutesInSeconds","mediaQueryList","matchMedia","cardGeneralStyles","matches","ToggleTimeUnit","Component","MainView","React","StatsView","App","StrictMode","bgColor","sm","md","order","HistoryView","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.89a5741d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"timerColonStyles\":\"TimerColon_timerColonStyles__141oB\",\"blink\":\"TimerColon_blink__WJKDJ\"};","module.exports = __webpack_public_path__ + \"static/media/dot.dd0f186c.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"ToggleTimeUnit_label__3TOHs\",\"checkboxDiv\":\"ToggleTimeUnit_checkboxDiv__1yUdo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cardGeneralStyles\":\"QuickStartPanel_cardGeneralStyles__ODsuY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bgColor\":\"App_bgColor__2k73q\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Row, Col } from 'react-bootstrap';\r\n\r\nconst TimeDisplay = ({ minutes, seconds }) => (\r\n  <Row style={{ fontSize: '30px' }}>\r\n    <Col className=\"d-flex align-items-sm-center justify-content-sm-center text-warning\">\r\n      {minutes < 10 ? `0${minutes}` : minutes}\r\n      {seconds < 10 ? `0${seconds}` : seconds}\r\n    </Col>\r\n  </Row>\r\n);\r\n\r\nTimeDisplay.propTypes = {\r\n  minutes: PropTypes.number.isRequired,\r\n  seconds: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default TimeDisplay;\r\n","import React from 'react';\r\nimport styles from './TimerColon.module.scss';\r\nimport { Image, Container } from 'react-bootstrap';\r\nimport dot from '../../../img/svg/dot.svg';\r\n\r\nconst TimerColon = () => (\r\n  <Container className=\"d-flex flex-sm-column align-items-sm-center my-auto\">\r\n    <Image className={styles.timerColonStyles} src={dot} roundedCircle />\r\n    <Image className={styles.timerColonStyles} src={dot} roundedCircle />\r\n  </Container>\r\n);\r\n\r\nexport default TimerColon;\r\n","import React from 'react';\r\nimport { ButtonGroup, Button } from 'react-bootstrap';\r\n//import styles from './TimerSetButtons.module.scss';\r\n\r\nconst TimerSetButtons = ({ setTime }) => {\r\n  return (\r\n    <ButtonGroup className=\"btn-sm w-50 mx-auto\">\r\n      <Button\r\n        variant=\"danger\"\r\n        data-toggle=\"tooltip\"\r\n        data-placement=\"bottom\"\r\n        title=\"+\"\r\n        className=\"shadow\"\r\n        onClick={setTime}\r\n      >\r\n        +\r\n      </Button>\r\n      <Button\r\n        variant=\"outline-danger\"\r\n        data-toggle=\"tooltip\"\r\n        data-placement=\"bottom\"\r\n        title=\"-\"\r\n        className=\"shadow\"\r\n        onClick={setTime}\r\n      >\r\n        -\r\n      </Button>\r\n    </ButtonGroup>\r\n  );\r\n};\r\n\r\nexport default TimerSetButtons;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Card, Col, Row } from 'react-bootstrap';\r\nimport TimerDisplay from './TimerDisplay/TimerDisplay';\r\nimport TimerColon from './TimerColon/TimerColon';\r\nimport TimerSetButtons from './TimerSetButtons/TimerSetButtons';\r\n\r\nconst TimeUnit = ({\r\n  children,\r\n  setWorkTime,\r\n  setRestTime,\r\n  workMinutes,\r\n  restMinutes,\r\n  elapsedWorkTimeInSeconds,\r\n  elapsedRestTimeInSeconds,\r\n}) => {\r\n  const workTimeInSeconds = workMinutes * 60;\r\n  const restTimeInSeconds = restMinutes * 60;\r\n  const workTimeLeftInSeconds = workTimeInSeconds - elapsedWorkTimeInSeconds;\r\n  const workMinutesLeft = Math.floor(workTimeLeftInSeconds / 60);\r\n  const workSecondsLeft = Math.floor(workTimeLeftInSeconds % 60);\r\n  const restTimeLeftInSeconds = restTimeInSeconds - elapsedRestTimeInSeconds;\r\n  const restMinutesLeft = Math.floor(restTimeLeftInSeconds / 60);\r\n  const restSecondsLeft = Math.floor(restTimeLeftInSeconds % 60);\r\n\r\n  return (\r\n    <>\r\n      <Card className=\"p-3 mx-auto my-auto bg-light shadow-lg border border-warning rounded-pill\">\r\n        <Row className=\"mx-auto text-uppercase text-warning\">{children}</Row>\r\n        <Row className=\"mx-auto\">\r\n          <Col>\r\n            <TimerDisplay\r\n              minutes={\r\n                children === 'WORK'\r\n                  ? workMinutesLeft > 0\r\n                    ? workMinutesLeft\r\n                    : 0\r\n                  : restMinutesLeft > 0\r\n                  ? restMinutesLeft\r\n                  : 0\r\n              }\r\n            />\r\n          </Col>\r\n          <Col className=\"w-25 d-flex flex-sm-column align-items-sm-center\">\r\n            <TimerColon />\r\n          </Col>\r\n          <Col>\r\n            <TimerDisplay\r\n              seconds={\r\n                children === 'WORK'\r\n                  ? workSecondsLeft > 0\r\n                    ? workSecondsLeft\r\n                    : 0\r\n                  : restSecondsLeft > 0\r\n                  ? restSecondsLeft\r\n                  : 0\r\n              }\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <TimerSetButtons\r\n            setTime={children === 'WORK' ? setWorkTime : setRestTime}\r\n          />\r\n        </Row>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nTimeUnit.propTypes = {\r\n  children: PropTypes.string.isRequired,\r\n  setWorkTime: PropTypes.func,\r\n  setRestTime: PropTypes.func,\r\n  workMinutes: PropTypes.number,\r\n  restMinutes: PropTypes.number,\r\n  elapsedWorkTimeInSeconds: PropTypes.number,\r\n  elapsedRestTimeInSeconds: PropTypes.number,\r\n};\r\n\r\nexport default TimeUnit;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Button } from 'react-bootstrap';\r\n\r\nconst StartStopButton = ({\r\n  children,\r\n  disabled,\r\n  onStart,\r\n  onPause,\r\n  isTimeRunning,\r\n}) => {\r\n  return (\r\n    <p>\r\n      <Button\r\n        className={`mt-5 mx-3 ${disabled ? 'disabled' : null}`}\r\n        variant=\"warning\"\r\n        data-toggle=\"tooltip\"\r\n        data-placement=\"top\"\r\n        title=\"Start pomodoro\"\r\n        onClick={isTimeRunning && !disabled ? onPause : onStart}\r\n      >\r\n        {children}\r\n      </Button>\r\n    </p>\r\n  );\r\n};\r\n\r\nStartStopButton.propTypes = {\r\n  children: PropTypes.string.isRequired,\r\n  disabled: PropTypes.bool.isRequired,\r\n  onStart: PropTypes.func,\r\n  onPause: PropTypes.func,\r\n  isTimeRunning: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default StartStopButton;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Button } from 'react-bootstrap';\r\n\r\nconst CancelButton = ({ children, disabled, onCancel }) => {\r\n  return (\r\n    <p>\r\n      <Button\r\n        className={`mt-5 mx-3 ${disabled ? 'disabled' : null}`}\r\n        variant=\"danger\"\r\n        data-toggle=\"tooltip\"\r\n        data-placement=\"top\"\r\n        title=\"Cancel session\"\r\n        onClick={onCancel}\r\n      >\r\n        {children}\r\n      </Button>\r\n    </p>\r\n  );\r\n};\r\n\r\nCancelButton.propTypes = {\r\n  children: PropTypes.string.isRequired,\r\n  disabled: PropTypes.bool.isRequired,\r\n  onCancel: PropTypes.func,\r\n};\r\n\r\nexport default CancelButton;\r\n","import React from 'react';\r\nimport styles from './ToggleTimeUnit.module.scss';\r\n\r\nconst ToggleUnit = ({ checkFn, children, checked }) => (\r\n  <label className={styles.label}>\r\n    <input type=\"checkbox\" checked={checked} onChange={checkFn} />\r\n    <div className={styles.checkboxDiv} />\r\n    {children}\r\n  </label>\r\n);\r\n\r\nexport default ToggleUnit;\r\n","import React, { Component } from 'react';\r\nimport { Row, Col, Container } from 'react-bootstrap';\r\nimport TimeUnit from '../TimeUnit/TimeUnit';\r\nimport StartStopButton from '../PomodoroButtons/StartStopButton';\r\nimport CancelButton from '../PomodoroButtons/CancelButton';\r\nimport ToggleTimeUnit from '../PomodoroButtons/ToggleTimeUnit';\r\nimport styles from './QuickStartPanel.module.scss';\r\n\r\nexport class QuickStartPanel extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isAppReady: false,\r\n      isTimeRunning: false,\r\n      isItWorkTime: false,\r\n      isItRestTime: false,\r\n      workMinutes: 0,\r\n      restMinutes: 0,\r\n      elapsedWorkTimeInSeconds: 0,\r\n      elapsedRestTimeInSeconds: 0,\r\n      checkboxChecked: false,\r\n    };\r\n    this.customTimer = null;\r\n  }\r\n\r\n  toggleTimeUnitDisplay = () => {\r\n    this.setState((prevState) => ({\r\n      checkboxChecked: !prevState.checkboxChecked,\r\n    }));\r\n  };\r\n\r\n  handleCancelTimer = () => {\r\n    this.setState({\r\n      isAppReady: false,\r\n      isTimeRunning: false,\r\n      isItWorkTime: false,\r\n      isItRestTime: false,\r\n      workMinutes: 0,\r\n      restMinutes: 0,\r\n      elapsedWorkTimeInSeconds: 0,\r\n      elapsedRestTimeInSeconds: 0,\r\n    });\r\n    this.customTimer = null;\r\n  };\r\n\r\n  handlePauseTimer = () => {\r\n    this.setState({ isTimeRunning: false });\r\n    window.clearInterval(this.customTimer);\r\n    this.customTimer = null;\r\n  };\r\n\r\n  handleStartTimer = () => {\r\n    this.setState({ isTimeRunning: true, isItWorkTime: true });\r\n    if (this.customTimer === null) {\r\n      this.customTimer = window.setInterval(() => {\r\n        if (this.state.isItWorkTime) {\r\n          this.setState((prevState) => ({\r\n            elapsedWorkTimeInSeconds: prevState.elapsedWorkTimeInSeconds + 1,\r\n          }));\r\n        }\r\n        if (!this.state.isItWorkTime && this.state.restMinutes > 0) {\r\n          this.setState((prevState) => ({\r\n            elapsedRestTimeInSeconds: prevState.elapsedRestTimeInSeconds + 1,\r\n          }));\r\n        }\r\n      }, 1000);\r\n    }\r\n  };\r\n\r\n  setWorkTime = ({ target }) => {\r\n    target.title === '+'\r\n      ? this.setState({ workMinutes: this.state.workMinutes + 0.5 })\r\n      : this.state.workMinutes > 0\r\n      ? this.setState({ workMinutes: this.state.workMinutes - 0.5 })\r\n      : this.setState({ workMinutes: 0 });\r\n  };\r\n\r\n  setRestTime = ({ target }) => {\r\n    target.title === '+'\r\n      ? this.setState({ restMinutes: this.state.restMinutes + 0.5 })\r\n      : this.state.restMinutes > 0\r\n      ? this.setState({ restMinutes: this.state.restMinutes - 0.5 })\r\n      : this.setState({ restMinutes: 0 });\r\n  };\r\n\r\n  componentDidUpdate() {\r\n    const workMinutesInSeconds = this.state.workMinutes * 60;\r\n    const restMinutesInSeconds = this.state.restMinutes * 60;\r\n    if (\r\n      this.state.workMinutes > 0 &&\r\n      this.state.restMinutes > 0 &&\r\n      this.state.isAppReady === false\r\n    ) {\r\n      this.setState({ isAppReady: true });\r\n    }\r\n\r\n    if (\r\n      workMinutesInSeconds === this.state.elapsedWorkTimeInSeconds &&\r\n      this.state.isItWorkTime &&\r\n      this.state.restMinutes > 0\r\n    ) {\r\n      this.setState({ isItWorkTime: false, isItRestTime: true });\r\n    }\r\n    if (\r\n      !this.state.isItWorkTime &&\r\n      this.state.isItRestTime &&\r\n      restMinutesInSeconds === this.state.elapsedRestTimeInSeconds\r\n    ) {\r\n      this.setState({\r\n        isTimeRunning: false,\r\n        isItRestTime: false,\r\n        isAppReady: false,\r\n        checkboxChecked: false,\r\n        workMinutes: 0,\r\n        restMinutes: 0,\r\n      });\r\n    }\r\n\r\n    if (this.state.isItWorkTime && this.state.checkboxChecked) {\r\n      this.setState({ checkboxChecked: false });\r\n    }\r\n    if (this.state.isItRestTime && !this.state.checkboxChecked) {\r\n      this.setState({ checkboxChecked: true });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      isAppReady,\r\n      isTimeRunning,\r\n      workMinutes,\r\n      restMinutes,\r\n      elapsedWorkTimeInSeconds,\r\n      elapsedRestTimeInSeconds,\r\n      checkboxChecked,\r\n    } = this.state;\r\n    let mediaQueryList = window.matchMedia('(max-width: 767px)');\r\n\r\n    return (\r\n      <Container className={`p-3 ${styles.cardGeneralStyles}`}>\r\n        <h2 className=\"text-warning text-center my-3\">Quick Pomodoro</h2>\r\n        <Row>\r\n          <Col className=\"d-flex\">\r\n            {mediaQueryList.matches && !checkboxChecked && (\r\n              <TimeUnit\r\n                workMinutes={workMinutes}\r\n                elapsedWorkTimeInSeconds={elapsedWorkTimeInSeconds}\r\n                setWorkTime={this.setWorkTime}\r\n              >\r\n                WORK\r\n              </TimeUnit>\r\n            )}\r\n            {mediaQueryList.matches && checkboxChecked && (\r\n              <TimeUnit\r\n                restMinutes={restMinutes}\r\n                elapsedRestTimeInSeconds={elapsedRestTimeInSeconds}\r\n                setRestTime={this.setRestTime}\r\n              >\r\n                BREAK\r\n              </TimeUnit>\r\n            )}\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <StartStopButton\r\n            onStart={isAppReady ? this.handleStartTimer : null}\r\n            onPause={isAppReady ? this.handlePauseTimer : null}\r\n            isTimeRunning={isTimeRunning}\r\n            disabled={workMinutes === 0 || restMinutes === 0}\r\n          >\r\n            {this.state.isTimeRunning ? 'Stop Pomodoro' : 'Start Pomodoro'}\r\n          </StartStopButton>\r\n          <CancelButton\r\n            disabled={!isAppReady}\r\n            onCancel={isAppReady ? this.handleCancelTimer : null}\r\n          >\r\n            Cancel\r\n          </CancelButton>\r\n\r\n          {mediaQueryList.matches && (\r\n            <ToggleTimeUnit\r\n              checked={checkboxChecked}\r\n              checkFn={this.toggleTimeUnitDisplay}\r\n            >\r\n              Set Break\r\n            </ToggleTimeUnit>\r\n          )}\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default QuickStartPanel;\r\n","import React from 'react';\r\nimport QuickStartPanel from '../../components/QuickStartPanel/QuickStartPanel';\r\nimport { Container, Row } from 'react-bootstrap';\r\n\r\nclass MainView extends React.Component {\r\n  render() {\r\n    return (\r\n      <Container className=\"vh-100\">\r\n        <Row>\r\n          <QuickStartPanel />\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MainView;\r\n","import React from 'react';\r\n\r\nclass StatsView extends React.Component {\r\n  render() {\r\n    return <div>.</div>;\r\n  }\r\n}\r\n\r\nexport default StatsView;\r\n","import React from 'react';\r\nimport MainView from '../MainView/MainView';\r\nimport HistoryView from '../HistoryView/HistoryView';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport styles from './App.module.scss';\r\n\r\nfunction App() {\r\n  return (\r\n    <React.StrictMode>\r\n      <div className={`App ${styles.bgColor}`}>\r\n        <Container className=\"py-5\">\r\n          <Row className=\"h-100\">\r\n            <Col sm={12} md={{ order: 2 }} className=\"col-md-9 shadow\">\r\n              <MainView />\r\n            </Col>\r\n            <Col\r\n              sm={12}\r\n              className=\"col-md-3 border border-danger rounded shadow\"\r\n            >\r\n              <HistoryView />\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    </React.StrictMode>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './views/App/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}
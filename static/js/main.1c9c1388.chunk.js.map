{"version":3,"sources":["components/TimeUnit/TimerColon/TimerColon.module.scss","img/svg/dot.svg","components/PomodoroButtons/ToggleTimeUnit.module.scss","components/QuickStartPanel/QuickStartPanel.module.scss","components/SessionForm/SessionForm.module.scss","components/HistoryPanel/HistoryItem/HistoryItem.module.scss","components/TimeUnit/TimeUnit.module.scss","components/SessionForm/SessionListItem.module.scss","views/HydrappView/HydrappView.module.scss","components/NavBar/NavBar.js","components/HistoryPanel/HistoryItem/HistoryItem.js","components/HistoryPanel/HistoryPanel.js","components/TimeUnit/TimerDisplay/TimerDisplay.js","components/TimeUnit/TimerColon/TimerColon.js","components/TimeUnit/TimerSetButtons/TimerSetButtons.js","components/TimeUnit/TimeUnit.js","components/PomodoroButtons/StartStopButton.js","components/PomodoroButtons/CancelButton.js","components/PomodoroButtons/ToggleTimeUnit.js","components/QuickStartPanel/SessionCountCard.js","components/QuickStartPanel/ProgressArc.js","TimeSetContext.js","components/QuickStartPanel/QuickStartPanel.js","components/ErrorBoundry/ErrorBoundry.js","components/PomodoroButtons/UtilityButton.js","components/SessionForm/SessionListItem.js","components/SessionForm/SessionForm.js","views/SessionsView/SessionsView.js","views/StatsView/StatsView.js","views/HydrappView/HydrappView.js","views/RootView/App.js","serviceWorker.js","index.js"],"names":["module","exports","NavBar","props","setActiveTab","selectedTab","setState","activeTab","state","this","Nav","onSelect","eventKey","variant","defaultActiveKey","Item","Link","as","to","Component","timeRecalc","timeInSeconds","Math","floor","HistoryItem","title","date","elapsedWorkTimeInSeconds","elapsedRestTimeInSeconds","pausesCount","sessionsCount","handleClose","className","styles","boxShadow","style","width","Toast","onClose","Header","closeLabel","toLocaleDateString","toLocaleTimeString","Body","Row","Col","sm","color","HistoryPanel","sortByDate","prevState","historyItemsFromStorage","sort","itemOne","ItemTwo","dateOne","Date","dateTwo","parseInt","getTime","deleteItem","itemToRemove","localStorage","removeItem","filter","item","id","moveDataFromStorageToState","localStoragePomodoros","Object","entries","map","includes","prepareDataForHistoryItem","preparedItem","JSON","parse","dateToParse","itemArrived","storageID","prevProps","extensiblePropObj","setItem","uuidv4","stringify","console","count","ItemsToDisplay","TransitionGroup","length","historyItem","CSSTransition","key","timeout","enter","exit","classNames","TimeDisplay","time","fontSize","TimerColon","Container","Image","timerColonStyles","src","dot","roundedCircle","TimerSetButtons","setTime","ButtonGroup","Button","data-toggle","data-placement","onClick","TimeUnit","children","minutesSet","elapsedTimeInSeconds","justMinutes","timeLeftInSeconds","minutesLeft","secondsLeft","Card","TimerDisplay","StartStopButton","disabled","handleStartStop","Badge","CancelButton","onCancel","ToggleUnit","checkFn","checked","label","type","onChange","checkboxDiv","SessionCountCard","sessionsTotal","currentSession","icon","bg","border","text","Text","ProgressBar","percentToRadian","percent","PI","draw","canvasSize","big","center","lineWidth","middleSquarePosition","dependsOnBigProp","ctx","canvas","current","getContext","clearRect","fillStyle","strokeStyle","beginPath","arc","stroke","React","createRef","ref","backgroundColor","height","defaultProps","TimeSetContext","createContext","displayName","QuickStartPanel","handleIncommingSession","listOfCycles","takeFirstSessionObjectAndUseIt","firstSessionObject","slice","shift","workMinutes","restMinutes","workIcon","restIcon","resetInterval","window","clearInterval","customTimerID","handleCancelTimer","totalElapsedWorkTimeInSeconds","totalElapsedRestTimeInSeconds","workTime","restTime","fetchFn","resetState","handlePauseTimer","isTimeRunning","handleStartTimer","isItWorkTime","setInterval","isItRestTime","isAppReady","userSetsRestTime","workMinutesInSeconds","restMinutesInSeconds","timesAreSetAndAppIsReadyToLaunch","workTImeHasFinishedNowRestTimeBegins","restTimeHasFinishedAndSessionIsOver","itIsWorkTimeAndWorkTimeIsOnDisplay","itIsRestTimeAndRestTimeIsOnDisplay","quickPomodoroHasFinished","readyToStartNewSession","beforeBegin","allSessionsHasFinished","screenIsWideEnough","matchMedia","matches","userWantsToDisplayWorkTime","workprogressInPercent","restprogressInPercent","shouldDisplayWorkTimeUnit","shouldDisplayRestTimeUnit","clocksAreNotTicking","background","Consumer","context","target","setWorkTime","setRestTime","ToggleTimeUnit","toggleTimeUnitDisplay","bind","xs","lg","ProgressArc","ErrorBoundry","hasError","error","errorInfo","log","message","UtilityButton","handleClick","size","SessionListItem","handleRemove","ListGroup","randomIconGenerator","arr","random","workIcons","breakIcons","SessionForm","setTitle","value","addItem","workAndRestTimeIsSet","placeholder","input","cursor","fetchFromSessionForm","SessionsView","StatsView","display","justifyContent","alignItems","HydrappView","hydrapp","container","document","querySelector","water","glassCounter","createElement","toISOString","counter","getItem","addGlassButton","decrementGlassButton","updateDisplay","innerHTML","opacity","setNumberOfGlasses","classList","add","appendChild","addEventListener","runHydrAppCode","hydrApp","App","redirect","that","fetchFromQuickStartPanel","mediaQuery","timeSetFunctions","StrictMode","fluid","pathname","Provider","md","order","exact","path","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.1c9c1388.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"timerColonStyles\":\"TimerColon_timerColonStyles__141oB\",\"blink\":\"TimerColon_blink__WJKDJ\"};","module.exports = __webpack_public_path__ + \"static/media/dot.dd0f186c.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"ToggleTimeUnit_label__3TOHs\",\"checkboxDiv\":\"ToggleTimeUnit_checkboxDiv__1yUdo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"background\":\"QuickStartPanel_background__2SPXn\",\"title\":\"QuickStartPanel_title__2cTRc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"SessionForm_label__2xOqU\",\"input\":\"SessionForm_input__1y5A_\",\"background\":\"SessionForm_background__patK7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"boxShadow\":\"HistoryItem_boxShadow__1VgdG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"boxShadow\":\"TimeUnit_boxShadow__1DoDJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"boxShadow\":\"SessionListItem_boxShadow__1smIH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"hydrApp\":\"HydrappView_hydrApp__3gpoU\"};","import React, { Component } from 'react';\r\nimport { Nav } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport class NavBar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      activeTab: '',\r\n    };\r\n  }\r\n\r\n  setActiveTab = (selectedTab) => {\r\n    this.setState({ activeTab: selectedTab });\r\n  };\r\n\r\n  render() {\r\n    const { activeTab } = this.state;\r\n    return (\r\n      <Nav\r\n        onSelect={(eventKey) => this.setActiveTab(eventKey)}\r\n        variant=\"tabs\"\r\n        defaultActiveKey=\"/\"\r\n      >\r\n        <Nav.Item>\r\n          <Nav.Link eventKey=\"/\" as={Link} to=\"/\">\r\n            Home\r\n          </Nav.Link>\r\n        </Nav.Item>\r\n        <Nav.Item>\r\n          <Nav.Link eventKey=\"/session\" as={Link} to=\"/session\">\r\n            Set Sessions\r\n          </Nav.Link>\r\n        </Nav.Item>\r\n        <Nav.Item>\r\n          <Nav.Link eventKey=\"/stats\" as={Link} to=\"/stats\">\r\n            Stats\r\n          </Nav.Link>\r\n        </Nav.Item>\r\n        <Nav.Item>\r\n          <Nav.Link eventKey=\"/hydrapp\" as={Link} to=\"/hydrapp\">\r\n            Hydrapp!\r\n          </Nav.Link>\r\n        </Nav.Item>\r\n      </Nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NavBar;\r\n","import React from 'react';\r\nimport { Toast, Col, Row } from 'react-bootstrap';\r\nimport styles from './HistoryItem.module.scss';\r\n\r\nfunction timeRecalc(timeInSeconds) {\r\n  const minutes = Math.floor(timeInSeconds / 60);\r\n  const seconds = Math.floor(timeInSeconds % 60);\r\n  return [minutes, seconds];\r\n}\r\n\r\nconst HistoryItem = ({\r\n  title,\r\n  date,\r\n  elapsedWorkTimeInSeconds,\r\n  elapsedRestTimeInSeconds,\r\n  pausesCount,\r\n  sessionsCount,\r\n  handleClose,\r\n}) => {\r\n  return (\r\n    <div className={`my-3 ${styles.boxShadow}`} style={{ width: '330px' }}>\r\n      <Toast onClose={handleClose}>\r\n        <Toast.Header closeLabel={'Close'}>\r\n          <strong className=\"mr-auto\">{title}</strong>\r\n          <strong>{date.toLocaleDateString()}</strong>\r\n          <small>{date.toLocaleTimeString()}</small>\r\n        </Toast.Header>\r\n        <Toast.Body className=\"text-center\">\r\n          <Row>\r\n            <Col sm={6}>\r\n              <small>Work Done:</small>{' '}\r\n              <strong>\r\n                {timeRecalc(elapsedWorkTimeInSeconds)[0]}:\r\n                {timeRecalc(elapsedWorkTimeInSeconds)[1]} min\r\n              </strong>{' '}\r\n            </Col>\r\n            <Col sm={6}>\r\n              <small>Rested:</small>{' '}\r\n              <strong>\r\n                {timeRecalc(elapsedRestTimeInSeconds)[0]}:\r\n                {timeRecalc(elapsedRestTimeInSeconds)[1]} min\r\n              </strong>{' '}\r\n              <br />\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col sm={6}>\r\n              <small className=\"mx-auto\">\r\n                Total Pauses:{' '}\r\n                <strong style={{ color: 'red' }}>{pausesCount}</strong>\r\n              </small>\r\n            </Col>\r\n            <Col sm={6}>\r\n              <small className=\"mx-auto\">\r\n                Total Sessions:{' '}\r\n                <strong style={{ color: 'red' }}>{sessionsCount}</strong>\r\n              </small>\r\n            </Col>\r\n          </Row>\r\n        </Toast.Body>\r\n      </Toast>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HistoryItem;\r\n","import React, { Component } from 'react';\r\nimport { Row } from 'react-bootstrap';\r\nimport HistoryItem from './HistoryItem/HistoryItem';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport '../../css/transitions.css';\r\n\r\nexport class HistoryPanel extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      itemArrived: false,\r\n      storageID: 0,\r\n      historyItemsFromStorage: [],\r\n    };\r\n  }\r\n\r\n  sortByDate = () => {\r\n    this.setState((prevState) => {\r\n      const historyItemsFromStorage = prevState.historyItemsFromStorage.sort(\r\n        (itemOne, ItemTwo) => {\r\n          const dateOne = new Date(itemOne.date);\r\n          const dateTwo = new Date(ItemTwo.date);\r\n          return parseInt(dateTwo.getTime()) - parseInt(dateOne.getTime());\r\n        }\r\n      );\r\n      return { historyItemsFromStorage };\r\n    });\r\n  };\r\n\r\n  deleteItem = (itemToRemove) => {\r\n    localStorage.removeItem(itemToRemove);\r\n    this.setState((prevState) => {\r\n      const historyItemsFromStorage = prevState.historyItemsFromStorage.filter(\r\n        (item) => item.id !== itemToRemove\r\n      );\r\n      return { historyItemsFromStorage };\r\n    });\r\n  };\r\n\r\n  moveDataFromStorageToState = () => {\r\n    const localStoragePomodoros = Object.entries(localStorage)\r\n      .map((item) => {\r\n        return item[0].includes('Pomodoro') ? item : null;\r\n      })\r\n      .filter((item) => item);\r\n    this.setState({ historyItemsFromStorage: localStoragePomodoros });\r\n  };\r\n\r\n  prepareDataForHistoryItem = () => {\r\n    this.setState((prevState) => {\r\n      const historyItemsFromStorage = prevState.historyItemsFromStorage.map(\r\n        (item) => {\r\n          const preparedItem = JSON.parse(item[1]);\r\n          let dateToParse = preparedItem.date;\r\n          dateToParse = new Date(dateToParse);\r\n          delete preparedItem.date;\r\n          preparedItem.date = dateToParse;\r\n          preparedItem.id = item[0];\r\n          return preparedItem;\r\n        }\r\n      );\r\n      return { historyItemsFromStorage };\r\n    });\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    const propsHasChanged =\r\n      prevProps.elapsedWorkTimeInSeconds !==\r\n      this.props.elapsedWorkTimeInSeconds;\r\n\r\n    if (propsHasChanged) {\r\n      const extensiblePropObj = { ...this.props };\r\n      extensiblePropObj.date = new Date();\r\n\r\n      localStorage.setItem(\r\n        `Pomodoro-Deluxe-${uuidv4()}`,\r\n        JSON.stringify(extensiblePropObj)\r\n      );\r\n      this.setState({ itemArrived: false });\r\n      this.moveDataFromStorageToState();\r\n      this.prepareDataForHistoryItem();\r\n      this.sortByDate();\r\n    }\r\n    console.count('HistoryPanel update');\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.moveDataFromStorageToState();\r\n    this.prepareDataForHistoryItem();\r\n    this.sortByDate();\r\n    console.count('HistoryPanel mount');\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    console.count('HistoryPanel unmount');\r\n  }\r\n  render() {\r\n    const ItemsToDisplay = this.state.historyItemsFromStorage;\r\n    return (\r\n      <>\r\n        <Row className=\"mt-3\">\r\n          <div className={`mx-auto`}>\r\n            <TransitionGroup>\r\n              {ItemsToDisplay.length\r\n                ? ItemsToDisplay.map((historyItem) => {\r\n                    return (\r\n                      <CSSTransition\r\n                        key={historyItem.id}\r\n                        timeout={{ enter: 800, exit: 500 }}\r\n                        classNames={'historyItem'}\r\n                      >\r\n                        <HistoryItem\r\n                          handleClose={() => {\r\n                            this.deleteItem(historyItem.id);\r\n                          }}\r\n                          key={historyItem.id}\r\n                          {...historyItem}\r\n                        />\r\n                      </CSSTransition>\r\n                    );\r\n                  })\r\n                : null}\r\n            </TransitionGroup>\r\n          </div>\r\n        </Row>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HistoryPanel;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Row, Col } from 'react-bootstrap';\r\n\r\nconst TimeDisplay = ({ time }) => (\r\n  <Row style={{ fontSize: '30px' }}>\r\n    <Col className=\"d-flex align-items-sm-center justify-content-sm-center text-dark\">\r\n      {time < 10 ? `0${time}` : time}\r\n    </Col>\r\n  </Row>\r\n);\r\n\r\nTimeDisplay.propTypes = {\r\n  time: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default TimeDisplay;\r\n","import React from 'react';\r\nimport styles from './TimerColon.module.scss';\r\nimport { Image, Container } from 'react-bootstrap';\r\nimport dot from '../../../img/svg/dot.svg';\r\n\r\nconst TimerColon = () => (\r\n  <Container className=\"d-flex flex-column align-items-center\">\r\n    <Image className={styles.timerColonStyles} src={dot} roundedCircle />\r\n    <Image className={styles.timerColonStyles} src={dot} roundedCircle />\r\n  </Container>\r\n);\r\n\r\nexport default TimerColon;\r\n","import React from 'react';\r\nimport { ButtonGroup, Button } from 'react-bootstrap';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst TimerSetButtons = ({ setTime }) => {\r\n  return (\r\n    <ButtonGroup className=\"btn-sm w-50 mx-auto\">\r\n      <Button\r\n        variant=\"dark\"\r\n        data-toggle=\"tooltip\"\r\n        data-placement=\"bottom\"\r\n        title=\"+\"\r\n        onClick={setTime}\r\n      >\r\n        +\r\n      </Button>\r\n      <Button\r\n        variant=\"outline-dark\"\r\n        data-toggle=\"tooltip\"\r\n        data-placement=\"bottom\"\r\n        title=\"-\"\r\n        onClick={setTime}\r\n      >\r\n        -\r\n      </Button>\r\n    </ButtonGroup>\r\n  );\r\n};\r\n\r\nTimerSetButtons.propTypes = {\r\n  setTime: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default TimerSetButtons;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Card, Col, Row } from 'react-bootstrap';\r\nimport TimerDisplay from './TimerDisplay/TimerDisplay';\r\nimport TimerColon from './TimerColon/TimerColon';\r\nimport TimerSetButtons from './TimerSetButtons/TimerSetButtons';\r\nimport styles from './TimeUnit.module.scss';\r\n\r\nconst TimeUnit = ({\r\n  children,\r\n  setTime,\r\n  minutesSet,\r\n  elapsedTimeInSeconds,\r\n  justMinutes,\r\n}) => {\r\n  const timeInSeconds = minutesSet * 60;\r\n  const timeLeftInSeconds = timeInSeconds - elapsedTimeInSeconds;\r\n  const minutesLeft = Math.floor(timeLeftInSeconds / 60);\r\n  const secondsLeft = Math.floor(timeLeftInSeconds % 60);\r\n\r\n  return (\r\n    <>\r\n      <Card\r\n        className={`p-3 mx-auto my-auto bg-light border border-dark rounded-pill ${styles.boxShadow}`}\r\n      >\r\n        <Row className=\"mx-auto text-uppercase text-dark\">{children}</Row>\r\n        <Row className=\"mx-auto\">\r\n          {justMinutes && (\r\n            <Col>\r\n              <TimerDisplay time={minutesSet > 0 ? minutesSet : 0} />\r\n            </Col>\r\n          )}\r\n          {!justMinutes && (\r\n            <>\r\n              <Col>\r\n                <TimerDisplay time={minutesLeft > 0 ? minutesLeft : 0} />\r\n              </Col>\r\n              <Col className=\"w-25\">\r\n                <TimerColon />\r\n              </Col>\r\n              <Col>\r\n                <TimerDisplay time={secondsLeft > 0 ? secondsLeft : 0} />\r\n              </Col>\r\n            </>\r\n          )}\r\n        </Row>\r\n        <Row>\r\n          <TimerSetButtons setTime={setTime} />\r\n        </Row>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nTimeUnit.propTypes = {\r\n  children: PropTypes.string.isRequired,\r\n  setTime: PropTypes.func.isRequired,\r\n  minutesSet: PropTypes.number.isRequired,\r\n  elapsedTimeInSeconds: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default TimeUnit;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Button, Badge } from 'react-bootstrap';\r\n\r\nconst StartStopButton = ({\r\n  children,\r\n  disabled,\r\n  handleStartStop,\r\n  pausesCount,\r\n}) => {\r\n  return (\r\n    <p>\r\n      <Button\r\n        className={`mt-5 mx-3 ${disabled ? 'disabled' : null}`}\r\n        variant=\"primary\"\r\n        data-toggle=\"tooltip\"\r\n        data-placement=\"top\"\r\n        title=\"Start pomodoro\"\r\n        onClick={disabled ? null : handleStartStop}\r\n      >\r\n        {children}\r\n        <Badge className=\"ml-2\" variant=\"light\">\r\n          {pausesCount}\r\n        </Badge>\r\n      </Button>\r\n    </p>\r\n  );\r\n};\r\n\r\nStartStopButton.propTypes = {\r\n  children: PropTypes.string.isRequired,\r\n  disabled: PropTypes.bool.isRequired,\r\n  onStart: PropTypes.func,\r\n  onPause: PropTypes.func,\r\n  isTimeRunning: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default StartStopButton;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Button } from 'react-bootstrap';\r\n\r\nconst CancelButton = ({ children, disabled, onCancel }) => {\r\n  return (\r\n    <p>\r\n      <Button\r\n        className={`mt-5 mx-3 ${disabled ? 'disabled' : null}`}\r\n        variant=\"danger\"\r\n        data-toggle=\"tooltip\"\r\n        data-placement=\"top\"\r\n        title=\"Cancel session\"\r\n        onClick={onCancel}\r\n      >\r\n        {children}\r\n      </Button>\r\n    </p>\r\n  );\r\n};\r\n\r\nCancelButton.propTypes = {\r\n  children: PropTypes.string.isRequired,\r\n  disabled: PropTypes.bool.isRequired,\r\n  onCancel: PropTypes.func,\r\n};\r\n\r\nexport default CancelButton;\r\n","import React from 'react';\r\nimport styles from './ToggleTimeUnit.module.scss';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ToggleUnit = ({ checkFn, children, checked }) => (\r\n  <label className={styles.label}>\r\n    <input type=\"checkbox\" checked={checked} onChange={checkFn} />\r\n    <div className={styles.checkboxDiv} />\r\n    {children}\r\n  </label>\r\n);\r\n\r\nToggleUnit.propTypes = {\r\n  checkFn: PropTypes.func.isRequired,\r\n  children: PropTypes.string.isRequired,\r\n  checked: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default ToggleUnit;\r\n","import React from 'react';\r\nimport { Card } from 'react-bootstrap';\r\n\r\nconst SessionCountCard = ({ sessionsTotal, currentSession, icon }) => {\r\n  return (\r\n    <Card bg=\"light\" border=\"dark\" text=\"dark\">\r\n      <Card.Body>\r\n        <Card.Text className=\"d-flex justify-content-around align-items-center\">\r\n          <div>\r\n            <span className=\"h3 mx-3\"> {currentSession}</span> /{' '}\r\n            <span className=\"h3 mx-3\">{sessionsTotal}</span>{' '}\r\n          </div>\r\n          <span className=\"h1 text-dark\">{icon}</span>\r\n        </Card.Text>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default SessionCountCard;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass ProgressBar extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.canvas = React.createRef();\r\n    this.state = {\r\n      lineWidth: 30,\r\n    };\r\n  }\r\n\r\n  percentToRadian = (percent) => {\r\n    return ((percent * 360) / 100) * (Math.PI / 180);\r\n  };\r\n\r\n  draw = () => {\r\n    const { percent, canvasSize, big = false } = this.props;\r\n    const center = canvasSize / 2;\r\n    const lineWidth = this.state.lineWidth;\r\n    const middleSquarePosition = center - lineWidth / 2;\r\n    const dependsOnBigProp = big ? 2 * lineWidth : lineWidth;\r\n    const ctx = this.canvas.current.getContext('2d');\r\n\r\n    ctx.clearRect(0, 0, 300, 300);\r\n    ctx.fillStyle = 'red';\r\n    ctx.strokeStyle = '#23272B';\r\n    ctx.beginPath();\r\n    ctx.arc(\r\n      center,\r\n      center,\r\n      dependsOnBigProp,\r\n      0,\r\n      this.percentToRadian(percent),\r\n      false\r\n    );\r\n    ctx.lineWidth = dependsOnBigProp;\r\n    ctx.stroke();\r\n    ctx.clearRect(\r\n      middleSquarePosition,\r\n      middleSquarePosition,\r\n      lineWidth,\r\n      lineWidth\r\n    );\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.draw();\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.draw();\r\n  }\r\n\r\n  render() {\r\n    const { canvasSize } = this.props;\r\n    return (\r\n      <canvas\r\n        className=\"mx-auto rounded-circle\"\r\n        ref={this.canvas}\r\n        style={{\r\n          border: '15px solid #23272B',\r\n          backgroundColor: 'rgba(255,255,255, .7)',\r\n        }}\r\n        width={canvasSize}\r\n        height={canvasSize}\r\n      ></canvas>\r\n    );\r\n  }\r\n}\r\n\r\nfunction progressPercentage(props, propName, componentName) {\r\n  const isNotNumber = typeof props.percent !== 'number';\r\n  const isNotGreaterThanZero = props.percent < 0;\r\n  const isNotLessThanHundred = props.percent > 100;\r\n  if (\r\n    props[propName] === props.percent &&\r\n    isNotNumber &&\r\n    isNotGreaterThanZero &&\r\n    isNotLessThanHundred\r\n  ) {\r\n    return new Error(\r\n      `Invalid prop '${propName}' issued to component ${componentName} it has to number between 0 - 100 `\r\n    );\r\n  }\r\n}\r\n\r\nProgressBar.defaultProps = {\r\n  className: '',\r\n};\r\n\r\nProgressBar.propTypes = {\r\n  percent: progressPercentage,\r\n  color: PropTypes.exact({\r\n    red: PropTypes.string,\r\n    green: PropTypes.string,\r\n    blue: PropTypes.string,\r\n  }),\r\n};\r\n\r\nexport default ProgressBar;\r\n","import React from 'react';\r\n\r\nconst TimeSetContext = React.createContext();\r\nTimeSetContext.displayName = TimeSetContext;\r\n\r\nexport default TimeSetContext;\r\n","import React, { Component } from 'react';\r\nimport { Row, Col, Container } from 'react-bootstrap';\r\nimport TimeUnit from '../TimeUnit/TimeUnit';\r\nimport StartStopButton from '../PomodoroButtons/StartStopButton';\r\nimport CancelButton from '../PomodoroButtons/CancelButton';\r\nimport ToggleTimeUnit from '../PomodoroButtons/ToggleTimeUnit';\r\nimport SessionCountCard from './SessionCountCard';\r\nimport ProgressArc from './ProgressArc';\r\nimport styles from './QuickStartPanel.module.scss';\r\n\r\nimport TimeSetContext from '../../TimeSetContext';\r\n\r\nexport class QuickStartPanel extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      title: 'Quick Pomodoro',\r\n      isAppReady: false,\r\n      isTimeRunning: false,\r\n      isItWorkTime: false,\r\n      isItRestTime: false,\r\n      workMinutes: 0,\r\n      restMinutes: 0,\r\n      pausesCount: 0,\r\n      sessionsCount: 0,\r\n      elapsedWorkTimeInSeconds: 0,\r\n      totalElapsedWorkTimeInSeconds: 0,\r\n      elapsedRestTimeInSeconds: 0,\r\n      totalElapsedRestTimeInSeconds: 0,\r\n      userSetsRestTime: false,\r\n      listOfCycles: [],\r\n    };\r\n    this.customTimerID = null;\r\n  }\r\n  //==================SESSION FORM DATA AREA =================\r\n  handleIncommingSession = () => {\r\n    this.setState({\r\n      title: this.props.title,\r\n      listOfCycles: this.props.listOfCycles,\r\n    });\r\n  };\r\n\r\n  takeFirstSessionObjectAndUseIt = () => {\r\n    this.setState((prevState) => {\r\n      const sessionObjects = this.state.listOfCycles.slice();\r\n      const firstSessionObject = sessionObjects.shift();\r\n      const {\r\n        workMinutes,\r\n        restMinutes,\r\n        workIcon,\r\n        restIcon,\r\n      } = firstSessionObject;\r\n      const sessionsCount = prevState.sessionsCount + 1;\r\n      return {\r\n        workMinutes,\r\n        restMinutes,\r\n        workIcon,\r\n        restIcon,\r\n        sessionsCount,\r\n      };\r\n    });\r\n  };\r\n\r\n  // ========================== TIMER FUNCTIONS ==========================\r\n  resetInterval = () => {\r\n    window.clearInterval(this.customTimerID);\r\n    this.customTimerID = null;\r\n  };\r\n\r\n  resetState() {\r\n    this.setState({\r\n      isAppReady: false,\r\n      isTimeRunning: false,\r\n      isItWorkTime: false,\r\n      isItRestTime: false,\r\n      workMinutes: 0,\r\n      restMinutes: 0,\r\n      pausesCount: 0,\r\n      sessionsCount: 0,\r\n      workIcon: null,\r\n      restIcon: null,\r\n      elapsedWorkTimeInSeconds: 0,\r\n      totalElapsedWorkTimeInSeconds: 0,\r\n      elapsedRestTimeInSeconds: 0,\r\n      totalElapsedRestTimeInSeconds: 0,\r\n      listOfCycles: [],\r\n    });\r\n  }\r\n\r\n  handleCancelTimer = () => {\r\n    const {\r\n      title,\r\n      elapsedWorkTimeInSeconds,\r\n      totalElapsedWorkTimeInSeconds,\r\n      elapsedRestTimeInSeconds,\r\n      totalElapsedRestTimeInSeconds,\r\n      pausesCount,\r\n      sessionsCount,\r\n    } = this.state;\r\n\r\n    const workTime =\r\n      sessionsCount > 0\r\n        ? elapsedWorkTimeInSeconds + totalElapsedWorkTimeInSeconds\r\n        : elapsedWorkTimeInSeconds;\r\n    const restTime =\r\n      sessionsCount > 0\r\n        ? elapsedRestTimeInSeconds + totalElapsedRestTimeInSeconds\r\n        : elapsedRestTimeInSeconds;\r\n\r\n    this.props.fetchFn(title, workTime, restTime, pausesCount, sessionsCount);\r\n\r\n    this.resetState();\r\n    this.resetInterval();\r\n  };\r\n\r\n  handlePauseTimer = () => {\r\n    this.setState((prevState) => ({\r\n      isTimeRunning: false,\r\n      pausesCount: prevState.pausesCount + 1,\r\n    }));\r\n    this.resetInterval();\r\n  };\r\n\r\n  handleStartTimer = () => {\r\n    if (this.customTimerID === null) {\r\n      this.setState({ isTimeRunning: true, isItWorkTime: true });\r\n      this.customTimerID = window.setInterval(() => {\r\n        if (this.state.isItWorkTime) {\r\n          this.setState((prevState) => ({\r\n            elapsedWorkTimeInSeconds: prevState.elapsedWorkTimeInSeconds + 1,\r\n          }));\r\n        }\r\n        if (this.state.isItRestTime && this.state.restMinutes > 0) {\r\n          this.setState((prevState) => ({\r\n            elapsedRestTimeInSeconds: prevState.elapsedRestTimeInSeconds + 1,\r\n          }));\r\n        }\r\n      }, 1000);\r\n    }\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    const {\r\n      title,\r\n      elapsedWorkTimeInSeconds,\r\n      totalElapsedWorkTimeInSeconds,\r\n      elapsedRestTimeInSeconds,\r\n      totalElapsedRestTimeInSeconds,\r\n      pausesCount,\r\n      sessionsCount,\r\n    } = this.state;\r\n\r\n    const workMinutesInSeconds = this.state.workMinutes * 60;\r\n    const restMinutesInSeconds = this.state.restMinutes * 60;\r\n    const timesAreSetAndAppIsReadyToLaunch =\r\n      this.state.workMinutes > 0 &&\r\n      this.state.restMinutes > 0 &&\r\n      this.state.isAppReady === false;\r\n    const workTImeHasFinishedNowRestTimeBegins =\r\n      workMinutesInSeconds === this.state.elapsedWorkTimeInSeconds &&\r\n      this.state.isItWorkTime &&\r\n      this.state.restMinutes > 0;\r\n    const restTimeHasFinishedAndSessionIsOver =\r\n      !this.state.isItWorkTime &&\r\n      this.state.isItRestTime &&\r\n      restMinutesInSeconds === this.state.elapsedRestTimeInSeconds;\r\n    const itIsWorkTimeAndWorkTimeIsOnDisplay =\r\n      this.state.isItWorkTime && this.state.userSetsRestTime;\r\n    const itIsRestTimeAndRestTimeIsOnDisplay =\r\n      this.state.isItRestTime && !this.state.userSetsRestTime;\r\n    const quickPomodoroHasFinished =\r\n      this.state.isItRestTime &&\r\n      restMinutesInSeconds === this.state.elapsedRestTimeInSeconds &&\r\n      title === 'Quick Pomodoro';\r\n\r\n    if (itIsWorkTimeAndWorkTimeIsOnDisplay) {\r\n      this.setState({ userSetsRestTime: false });\r\n    }\r\n    if (itIsRestTimeAndRestTimeIsOnDisplay) {\r\n      this.setState({ userSetsRestTime: true });\r\n    }\r\n\r\n    if (timesAreSetAndAppIsReadyToLaunch) {\r\n      this.setState({ isAppReady: true });\r\n    }\r\n\r\n    if (workTImeHasFinishedNowRestTimeBegins) {\r\n      this.setState({ isItWorkTime: false, isItRestTime: true });\r\n    }\r\n\r\n    if (quickPomodoroHasFinished) {\r\n      this.props.fetchFn(\r\n        title,\r\n        elapsedWorkTimeInSeconds,\r\n        elapsedRestTimeInSeconds,\r\n        pausesCount,\r\n        sessionsCount\r\n      );\r\n      this.resetState();\r\n    }\r\n\r\n    if (restTimeHasFinishedAndSessionIsOver) {\r\n      const { elapsedWorkTimeInSeconds, elapsedRestTimeInSeconds } = this.state;\r\n\r\n      this.setState((prevState) => {\r\n        const totalElapsedWorkTimeInSeconds =\r\n          prevState.totalElapsedWorkTimeInSeconds + elapsedWorkTimeInSeconds;\r\n        const totalElapsedRestTimeInSeconds =\r\n          prevState.totalElapsedRestTimeInSeconds + elapsedRestTimeInSeconds;\r\n        return { totalElapsedWorkTimeInSeconds, totalElapsedRestTimeInSeconds };\r\n      });\r\n\r\n      this.setState({\r\n        isAppReady: false,\r\n        isTimeRunning: false,\r\n        isItWorkTime: false,\r\n        isItRestTime: false,\r\n        workMinutes: 0,\r\n        restMinutes: 0,\r\n        elapsedWorkTimeInSeconds: 0,\r\n        elapsedRestTimeInSeconds: 0,\r\n      });\r\n      this.resetInterval();\r\n    }\r\n\r\n    //==================SESSION FORM DATA PREPARATION AREA =================\r\n    const readyToStartNewSession =\r\n      this.state.listOfCycles.length && this.state.workMinutes === 0;\r\n    const beforeBegin = this.state.sessionsCount === 0;\r\n    const allSessionsHasFinished =\r\n      this.state.sessionsCount > this.props.listOfCycles.length;\r\n\r\n    if (readyToStartNewSession && beforeBegin) {\r\n      this.takeFirstSessionObjectAndUseIt();\r\n    }\r\n\r\n    if (readyToStartNewSession && !beforeBegin) {\r\n      this.takeFirstSessionObjectAndUseIt();\r\n      this.handleStartTimer();\r\n    }\r\n\r\n    if (allSessionsHasFinished) {\r\n      this.props.fetchFn(\r\n        title,\r\n        totalElapsedWorkTimeInSeconds,\r\n        totalElapsedRestTimeInSeconds,\r\n        pausesCount,\r\n        sessionsCount\r\n      );\r\n      this.resetState();\r\n      this.resetInterval();\r\n    }\r\n\r\n    console.count(`QuickStartPanel Update`);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const sessionTitleWasSet = this.state.title !== this.props.title;\r\n\r\n    if (sessionTitleWasSet) {\r\n      this.handleIncommingSession();\r\n    }\r\n\r\n    console.count('QuickStartPanel Mounted');\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.resetState();\r\n    this.resetInterval();\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      title,\r\n      isAppReady,\r\n      isTimeRunning,\r\n      workMinutes,\r\n      restMinutes,\r\n      elapsedWorkTimeInSeconds,\r\n      elapsedRestTimeInSeconds,\r\n      userSetsRestTime,\r\n      pausesCount,\r\n      isItWorkTime,\r\n      isItRestTime,\r\n      workIcon,\r\n      restIcon,\r\n    } = this.state;\r\n    const mediaQueryList = window.matchMedia('(max-width: 992px)');\r\n    const screenIsWideEnough = !mediaQueryList.matches;\r\n    const userWantsToDisplayWorkTime = !userSetsRestTime;\r\n\r\n    const workprogressInPercent =\r\n      (elapsedWorkTimeInSeconds / (workMinutes * 60)) * 100.0;\r\n    const restprogressInPercent =\r\n      (elapsedRestTimeInSeconds / (restMinutes * 60)) * 100.0;\r\n\r\n    const shouldDisplayWorkTimeUnit =\r\n      screenIsWideEnough || userWantsToDisplayWorkTime;\r\n    const shouldDisplayRestTimeUnit =\r\n      screenIsWideEnough || !userWantsToDisplayWorkTime;\r\n\r\n    const clocksAreNotTicking = !isItWorkTime && !isItRestTime;\r\n\r\n    return (\r\n      <Container className={`p-3 mt-1 ${styles.background}`}>\r\n        <TimeSetContext.Consumer>\r\n          {(context) => (\r\n            <>\r\n              <h2 className={`text-dark text-center my-3 ${styles.title}`}>\r\n                {title !== 'Quick Pomodoro' ? title : 'Quick Pomodoro'}\r\n              </h2>\r\n              <Row>\r\n                <Col className=\"d-flex\">\r\n                  {shouldDisplayWorkTimeUnit && (\r\n                    <TimeUnit\r\n                      minutesSet={workMinutes}\r\n                      elapsedTimeInSeconds={elapsedWorkTimeInSeconds}\r\n                      setTime={\r\n                        clocksAreNotTicking\r\n                          ? ({ target }) =>\r\n                              context.setWorkTime({ target }, this)\r\n                          : null\r\n                      }\r\n                    >\r\n                      WORK\r\n                    </TimeUnit>\r\n                  )}\r\n                  {shouldDisplayRestTimeUnit && (\r\n                    <TimeUnit\r\n                      minutesSet={restMinutes}\r\n                      elapsedTimeInSeconds={elapsedRestTimeInSeconds}\r\n                      setTime={\r\n                        clocksAreNotTicking\r\n                          ? ({ target }) =>\r\n                              context.setRestTime({ target }, this)\r\n                          : null\r\n                      }\r\n                    >\r\n                      BREAK\r\n                    </TimeUnit>\r\n                  )}\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <StartStopButton\r\n                  handleStartStop={\r\n                    isAppReady && !isTimeRunning\r\n                      ? this.handleStartTimer\r\n                      : this.handlePauseTimer\r\n                  }\r\n                  pausesCount={pausesCount}\r\n                  isTimeRunning={isTimeRunning}\r\n                  disabled={workMinutes === 0 || restMinutes === 0}\r\n                >\r\n                  {this.state.isTimeRunning\r\n                    ? 'Stop Pomodoro'\r\n                    : 'Start Pomodoro'}\r\n                </StartStopButton>\r\n                <CancelButton\r\n                  disabled={!isAppReady}\r\n                  onCancel={isAppReady ? this.handleCancelTimer : null}\r\n                >\r\n                  Cancel\r\n                </CancelButton>\r\n\r\n                {!screenIsWideEnough && (\r\n                  <ToggleTimeUnit\r\n                    checked={userSetsRestTime}\r\n                    checkFn={context.toggleTimeUnitDisplay.bind(this)}\r\n                  >\r\n                    Set Break\r\n                  </ToggleTimeUnit>\r\n                )}\r\n              </Row>\r\n              <Row>\r\n                <Col xs={3} lg={4} className=\"p-3\">\r\n                  {this.props.listOfCycles.length > 0 && (\r\n                    <SessionCountCard\r\n                      sessionsTotal={this.props.listOfCycles.length}\r\n                      currentSession={this.state.sessionsCount}\r\n                      icon={isItRestTime ? restIcon : workIcon}\r\n                    />\r\n                  )}\r\n                </Col>\r\n                <Col xs={9} lg={8} className=\"mx-auto\">\r\n                  <ProgressArc\r\n                    percent={\r\n                      this.state.isItWorkTime\r\n                        ? workprogressInPercent\r\n                        : restprogressInPercent\r\n                    }\r\n                    canvasSize={screenIsWideEnough ? 250 : 150}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n            </>\r\n          )}\r\n        </TimeSetContext.Consumer>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default QuickStartPanel;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass ErrorBoundry extends React.Component {\r\n  state = {\r\n    hasError: false,\r\n  };\r\n  static getDerivedStateFromError(error) {\r\n    // Update state so the next render will show the fallback UI.\r\n    return { hasError: true };\r\n  }\r\n\r\n  componentDidCatch(error, errorInfo) {\r\n    // You can also log the error to an error reporting service\r\n    console.log('Wystąpił błąd ', error, errorInfo);\r\n  }\r\n  render() {\r\n    const { message, children } = this.props;\r\n    return this.state.hasError ? message : children;\r\n  }\r\n}\r\n\r\nErrorBoundry.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n  children: PropTypes.any.isRequired,\r\n};\r\n\r\nexport default ErrorBoundry;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Button } from 'react-bootstrap';\r\n\r\nconst UtilityButton = ({ children, handleClick, variant, size }) => {\r\n  return (\r\n    <p>\r\n      <Button size={size} variant={variant} onClick={handleClick}>\r\n        {children}\r\n      </Button>\r\n    </p>\r\n  );\r\n};\r\n\r\nUtilityButton.propTypes = {\r\n  children: PropTypes.string.isRequired,\r\n  handleClick: PropTypes.func,\r\n  size: PropTypes.string,\r\n};\r\n\r\nexport default UtilityButton;\r\n","import React from 'react';\r\nimport { ListGroup } from 'react-bootstrap';\r\nimport styles from './SessionListItem.module.scss';\r\n\r\nconst SessionListItem = ({\r\n  workMinutes,\r\n  restMinutes,\r\n  workIcon,\r\n  restIcon,\r\n  handleRemove,\r\n}) => {\r\n  return (\r\n    <>\r\n      <ListGroup.Item\r\n        className=\"d-flex justify-content-around\"\r\n        onClick={handleRemove}\r\n        className={styles.boxShadow}\r\n      >\r\n        <span>\r\n          <span style={{ fontSize: '40px' }}>{workIcon}</span> Work Time:{' '}\r\n          <strong className=\"h2 text-danger\">{workMinutes}</strong>\r\n        </span>{' '}\r\n        <span>\r\n          <span style={{ fontSize: '40px' }}>{restIcon}</span> Break Time:{' '}\r\n          <strong className=\"h2 text-danger\">{restMinutes}</strong>\r\n        </span>\r\n      </ListGroup.Item>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SessionListItem;\r\n","import React, { Component } from 'react';\r\nimport { Container, Row, Col, ListGroup } from 'react-bootstrap';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport TimeUnit from '../TimeUnit/TimeUnit';\r\nimport ToggleTimeUnit from '../PomodoroButtons/ToggleTimeUnit';\r\nimport UtilityButton from '../PomodoroButtons/UtilityButton';\r\nimport SessionListItem from './SessionListItem';\r\n\r\nimport TimeSetContext from '../../TimeSetContext';\r\n\r\nimport styles from './SessionForm.module.scss';\r\nimport {\r\n  GiBiceps,\r\n  GiBoatFishing,\r\n  GiArmorUpgrade,\r\n  GiAmericanFootballBall,\r\n  GiBeachBucket,\r\n  GiCroissant,\r\n  GiCoins,\r\n  GiHighKick,\r\n  GiPodium,\r\n  GiPush,\r\n  GiSunglasses,\r\n  GiAtom,\r\n  GiTeslaTurret,\r\n  GiSnail,\r\n} from 'react-icons/gi';\r\n\r\nfunction randomIconGenerator(arr) {\r\n  const random = Math.floor(Math.random() * arr.length);\r\n\r\n  return arr[random];\r\n}\r\n\r\nconst workIcons = [\r\n  <GiBiceps />,\r\n  <GiArmorUpgrade />,\r\n  <GiCoins />,\r\n  <GiHighKick />,\r\n  <GiPodium />,\r\n  <GiPush />,\r\n  <GiAtom />,\r\n];\r\nconst breakIcons = [\r\n  <GiBoatFishing />,\r\n  <GiAmericanFootballBall />,\r\n  <GiBeachBucket />,\r\n  <GiCroissant />,\r\n  <GiSunglasses />,\r\n  <GiTeslaTurret />,\r\n  <GiSnail />,\r\n];\r\n\r\nexport class SessionForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      title: '',\r\n      listOfCycles: [],\r\n      workMinutes: 0,\r\n      restMinutes: 0,\r\n      userSetsRestTime: false,\r\n    };\r\n  }\r\n\r\n  setTitle = ({ target }) => {\r\n    this.setState({ title: target.value });\r\n  };\r\n\r\n  addItem = () => {\r\n    this.setState((prevState) => {\r\n      const listOfCycles = [\r\n        ...prevState.listOfCycles,\r\n        {\r\n          id: uuidv4(),\r\n          workMinutes: this.state.workMinutes,\r\n          restMinutes: this.state.restMinutes,\r\n          workIcon: randomIconGenerator(workIcons),\r\n          restIcon: randomIconGenerator(breakIcons),\r\n        },\r\n      ];\r\n      const workMinutes = 0;\r\n      const restMinutes = 0;\r\n      return { listOfCycles, workMinutes, restMinutes };\r\n    });\r\n  };\r\n\r\n  removeItem = (itemToRemove) => {\r\n    this.setState((prevState) => {\r\n      const listOfCycles = prevState.listOfCycles.filter(\r\n        (item) => item.id !== itemToRemove\r\n      );\r\n      return { listOfCycles };\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      userSetsRestTime,\r\n      title,\r\n      listOfCycles,\r\n      workMinutes,\r\n      restMinutes,\r\n    } = this.state;\r\n    const mediaQuery = window.matchMedia('(max-width: 992px)');\r\n    const screenIsWideEnough = !mediaQuery.matches;\r\n    const userWantsToDisplayWorkTime = !userSetsRestTime;\r\n    const shouldDisplayWorkTimeUnit =\r\n      screenIsWideEnough || userWantsToDisplayWorkTime;\r\n    const shouldDisplayRestTimeUnit =\r\n      screenIsWideEnough || !userWantsToDisplayWorkTime;\r\n    const workAndRestTimeIsSet = workMinutes > 0 && restMinutes > 0;\r\n\r\n    return (\r\n      <Container className={`p-3 mt-1 mb-2 ${styles.background}`}>\r\n        <TimeSetContext.Consumer>\r\n          {(context) => (\r\n            <>\r\n              <Row className=\"d-flex justify-content-center\">\r\n                <Col xs={12} lg={6}>\r\n                  <input\r\n                    placeholder=\"Session Name\"\r\n                    className={`text-center ${styles.input}`}\r\n                    onChange={this.setTitle}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <Row className=\"d-flex justify-content-center my-3\">\r\n                <Col xs={8} className=\"col-sm-7 col-lg-3\">\r\n                  {shouldDisplayWorkTimeUnit && (\r\n                    <TimeUnit\r\n                      justMinutes\r\n                      setTime={({ target }) =>\r\n                        context.setWorkTime({ target }, this)\r\n                      }\r\n                      minutesSet={workMinutes}\r\n                    >\r\n                      Work\r\n                    </TimeUnit>\r\n                  )}\r\n                </Col>\r\n                <Col xs={8} className=\"col-sm-7 col-lg-3\">\r\n                  {shouldDisplayRestTimeUnit && (\r\n                    <TimeUnit\r\n                      justMinutes\r\n                      setTime={({ target }) =>\r\n                        context.setRestTime({ target }, this)\r\n                      }\r\n                      minutesSet={restMinutes}\r\n                    >\r\n                      Break\r\n                    </TimeUnit>\r\n                  )}\r\n                </Col>\r\n              </Row>\r\n              <Row className=\"d-flex justify-content-around align-items-center my-3\">\r\n                <UtilityButton\r\n                  handleClick={workAndRestTimeIsSet ? this.addItem : null}\r\n                  size={'lg'}\r\n                  variant={'outline-primary'}\r\n                >\r\n                  Add Cycle\r\n                </UtilityButton>\r\n                {!screenIsWideEnough && (\r\n                  <ToggleTimeUnit\r\n                    checked={userSetsRestTime}\r\n                    checkFn={context.toggleTimeUnitDisplay.bind(this)}\r\n                  >\r\n                    Set Break\r\n                  </ToggleTimeUnit>\r\n                )}\r\n              </Row>\r\n              <Row className=\"d-flex justify-content-center text-center\">\r\n                <Col\r\n                  className=\"overflow-auto col-lg-6\"\r\n                  style={{ height: '190px' }}\r\n                >\r\n                  <ListGroup style={{ cursor: 'pointer' }}>\r\n                    {listOfCycles.map((item) => (\r\n                      <SessionListItem\r\n                        handleRemove={() => {\r\n                          this.removeItem(item.id);\r\n                        }}\r\n                        key={item.id}\r\n                        {...item}\r\n                      />\r\n                    ))}\r\n                  </ListGroup>\r\n                </Col>\r\n              </Row>\r\n              <Row className=\"d-flex justify-content-around align-items-center my-3\">\r\n                <UtilityButton\r\n                  handleClick={\r\n                    title !== '' && listOfCycles.length\r\n                      ? () => context.fetchFromSessionForm(title, listOfCycles)\r\n                      : null\r\n                  }\r\n                  size={'lg'}\r\n                  variant={'primary'}\r\n                >\r\n                  {title !== '' && listOfCycles.length\r\n                    ? 'Complete Session'\r\n                    : 'Set Session Parameters'}\r\n                </UtilityButton>\r\n              </Row>\r\n            </>\r\n          )}\r\n        </TimeSetContext.Consumer>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SessionForm;\r\n","import React from 'react';\r\nimport SessionForm from '../../components/SessionForm/SessionForm';\r\n\r\nconst SessionsView = () => {\r\n  return (\r\n    <>\r\n      <SessionForm />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SessionsView;\r\n","import React from 'react';\r\nimport { VscExclude } from 'react-icons/vsc';\r\n\r\nconst StatsView = () => {\r\n  return (\r\n    <div\r\n      style={{\r\n        fontSize: '100px',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        height: '100%',\r\n      }}\r\n    >\r\n      Work in progress\r\n      <VscExclude />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StatsView;\r\n","import React, { Component } from 'react';\r\nimport styles from './HydrappView.module.scss';\r\n\r\nexport class HydrappView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.hydrapp = React.createRef();\r\n    this.state = {};\r\n  }\r\n\r\n  runHydrAppCode() {\r\n    const container = document.querySelector('.app__glass');\r\n    const water = document.querySelector('.app__glass_total--water');\r\n    let glassCounter = document.createElement('div');\r\n\r\n    const key = `HydrApp-${new Date().toISOString().slice(0, 10)}`;\r\n    let counter = key ? localStorage.getItem(key) : 0;\r\n\r\n    const addGlassButton = document.querySelector('.app__increment--js');\r\n    const decrementGlassButton = document.querySelector('.app__decrement--js');\r\n\r\n    glassCounter.classList.add('app__counter');\r\n\r\n    function updateDisplay() {\r\n      glassCounter.innerHTML = localStorage.getItem(key);\r\n      water.style.opacity = 0.1 * counter;\r\n    }\r\n\r\n    function checkOnLoad() {\r\n      if (localStorage.getItem(key)) {\r\n        updateDisplay();\r\n      }\r\n      if (!localStorage.getItem(key)) {\r\n        glassCounter.innerHTML = 0;\r\n        water.style.opacity = 0;\r\n      }\r\n    }\r\n\r\n    function setNumberOfGlasses() {\r\n      localStorage.setItem(key, counter);\r\n    }\r\n\r\n    function handleIncrementCounterButton() {\r\n      counter++;\r\n      setNumberOfGlasses();\r\n      updateDisplay();\r\n    }\r\n\r\n    function handledecrementCounterButton() {\r\n      counter--;\r\n      if (counter < 0) counter = 0;\r\n      setNumberOfGlasses();\r\n      updateDisplay();\r\n    }\r\n\r\n    checkOnLoad();\r\n    container.appendChild(glassCounter);\r\n\r\n    addGlassButton.addEventListener('click', handleIncrementCounterButton);\r\n    decrementGlassButton.addEventListener(\r\n      'click',\r\n      handledecrementCounterButton\r\n    );\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.hydrapp.current.innerHTML = `<main class=\"app\">\r\n    <h1 class=\"app__title\">HydrApp</h1>\r\n    <div class=\"app__glass\">\r\n      <svg\r\n        width=\"280\"\r\n        height=\"280\"\r\n        viewBox=\"0 0 280 280\"\r\n        fill=\"none\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        class=\"app__glass_total\"\r\n      >\r\n        <path\r\n          d=\"M242.748 2.8875C241.085 1.05 238.74 0 236.255 0H43.7555C41.288 0 38.9255 1.05 37.263 2.8875C35.618 4.7075 34.7955 7.1575 35.0405 9.625L61.2905 272.125C61.7455 276.605 65.508 280 70.0055 280H210.005C214.503 280 218.265 276.605 218.703 272.125L244.953 9.625C245.215 7.1575 244.41 4.7075 242.748 2.8875Z\"\r\n          fill=\"#ECEFF1\"\r\n          class=\"app__glass_total--glass\"\r\n        />\r\n        <path\r\n          d=\"M219.455 89.25L202.13 262.5H77.8805L58.4555 68.775C80.3305 61.775 113.58 57.05 140.005 78.75C165.555 99.75 197.755 95.9 219.455 89.25Z\"\r\n          fill=\"#2196F3\"\r\n          class=\"app__glass_total--water\"\r\n        />\r\n      </svg>\r\n    </div>\r\n    <button class=\"app__increment app__increment--js\">dodaj szklankę</button>\r\n    <button class=\"app__decrement app__decrement--js\">\r\n      odejmij szklankę\r\n    </button>\r\n  </main>`; // el dom któey mnie interesuje\r\n    this.runHydrAppCode();\r\n  }\r\n\r\n  render() {\r\n    return <div className={styles.hydrApp} ref={this.hydrapp}></div>;\r\n  }\r\n}\r\n\r\nexport default HydrappView;\r\n","import React from 'react';\r\nimport NavBar from '../../components/NavBar/NavBar';\r\nimport HistoryPanel from '../../components/HistoryPanel/HistoryPanel';\r\nimport QuickStartPanel from '../../components/QuickStartPanel/QuickStartPanel';\r\nimport ErrorBoundry from '../../components/ErrorBoundry/ErrorBoundry';\r\nimport SessionsView from '../SessionsView/SessionsView';\r\nimport StatsView from '../StatsView/StatsView';\r\nimport HydrappView from '../HydrappView/HydrappView';\r\n\r\nimport { BrowserRouter, Route, Redirect } from 'react-router-dom';\r\nimport TimeSetContext from '../../TimeSetContext';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    title: 'Quick Pomodoro',\r\n    workTime: 0,\r\n    restTime: 0,\r\n    elapsedWorkTimeInSeconds: 0,\r\n    elapsedRestTimeInSeconds: 0,\r\n    pausesCount: 0,\r\n    sessionsCount: 0,\r\n    listOfCycles: [],\r\n    redirect: true,\r\n  };\r\n\r\n  setWorkTime = ({ target }, that) => {\r\n    target.title === '+'\r\n      ? that.setState({ workMinutes: that.state.workMinutes + 5 })\r\n      : that.state.workMinutes > 0\r\n      ? that.setState({ workMinutes: that.state.workMinutes - 5 })\r\n      : that.setState({ workMinutes: 0 });\r\n  };\r\n\r\n  setRestTime = ({ target }, that) => {\r\n    target.title === '+'\r\n      ? that.setState({ restMinutes: that.state.restMinutes + 2 })\r\n      : that.state.restMinutes > 0\r\n      ? that.setState({ restMinutes: that.state.restMinutes - 2 })\r\n      : that.setState({ restMinutes: 0 });\r\n  };\r\n\r\n  toggleTimeUnitDisplay() {\r\n    this.setState((prevState) => ({\r\n      userSetsRestTime: !prevState.userSetsRestTime,\r\n    }));\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.count('App mount');\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    console.count('App update');\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    console.count('App mount');\r\n  }\r\n\r\n  fetchFromQuickStartPanel = (\r\n    title,\r\n    elapsedWorkTimeInSeconds,\r\n    elapsedRestTimeInSeconds,\r\n    pausesCount,\r\n    sessionsCount\r\n  ) => {\r\n    sessionsCount = sessionsCount <= 0 ? 0 : sessionsCount - 1;\r\n    this.setState({\r\n      title,\r\n      elapsedWorkTimeInSeconds,\r\n      elapsedRestTimeInSeconds,\r\n      pausesCount,\r\n      sessionsCount,\r\n      listOfCycles: [],\r\n    });\r\n  };\r\n\r\n  fetchFromSessionForm = (title, listOfCycles) => {\r\n    this.setState({ title, listOfCycles });\r\n  };\r\n\r\n  render() {\r\n    const mediaQuery = window.matchMedia('(max-width: 992px)');\r\n    const timeSetFunctions = {\r\n      setWorkTime: this.setWorkTime,\r\n      setRestTime: this.setRestTime,\r\n      toggleTimeUnitDisplay: this.toggleTimeUnitDisplay,\r\n      fetchFromSessionForm: this.fetchFromSessionForm,\r\n    };\r\n    return (\r\n      <React.StrictMode>\r\n        <>\r\n          <Container\r\n            fluid\r\n            className={`${!mediaQuery.matches ? 'vh-100' : ''} p-4`}\r\n          >\r\n            <BrowserRouter>\r\n              <>\r\n                <Redirect to={{ pathname: '/', state: { redirect: true } }} />\r\n                <Row>\r\n                  <NavBar />\r\n                </Row>\r\n                <Row>\r\n                  <TimeSetContext.Provider value={timeSetFunctions}>\r\n                    <Col\r\n                      sm={12}\r\n                      md={{ order: 2 }}\r\n                      className=\"col-md-6 col-lg-9\"\r\n                      style={{ height: '90vh' }}\r\n                    >\r\n                      <Route exact path=\"/\">\r\n                        <ErrorBoundry message=\"Błąd w QuickstartPanel\">\r\n                          <QuickStartPanel\r\n                            {...this.state}\r\n                            fetchFn={this.fetchFromQuickStartPanel}\r\n                          />\r\n                        </ErrorBoundry>\r\n                      </Route>\r\n                      <Route path=\"/session\">\r\n                        <ErrorBoundry message=\"Błąd w Sessions\">\r\n                          {this.state.listOfCycles.length ? (\r\n                            <Redirect to=\"/\" />\r\n                          ) : (\r\n                            <SessionsView />\r\n                          )}\r\n                        </ErrorBoundry>\r\n                      </Route>\r\n                      <Route path=\"/stats\">\r\n                        <ErrorBoundry message=\"Błąd w Stats\">\r\n                          <StatsView />\r\n                        </ErrorBoundry>\r\n                      </Route>\r\n                      <Route path=\"/hydrapp\">\r\n                        <ErrorBoundry message=\"Błąd w Hydrapp\">\r\n                          <HydrappView />\r\n                        </ErrorBoundry>\r\n                      </Route>\r\n                    </Col>\r\n                    <Col\r\n                      sm={12}\r\n                      className=\"col-md-6 col-lg-3 rounded overflow-auto\"\r\n                      // style={{ maxHeight: '90vh' }}\r\n                    >\r\n                      <ErrorBoundry message=\"Błąd w HistoryPanel\">\r\n                        <HistoryPanel {...this.state} />\r\n                      </ErrorBoundry>\r\n                    </Col>\r\n                  </TimeSetContext.Provider>\r\n                </Row>\r\n              </>\r\n            </BrowserRouter>\r\n          </Container>\r\n        </>\r\n      </React.StrictMode>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './views/RootView/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}